{"version":3,"sources":["controls/carousel/Carousel.tsx"],"names":[],"mappings":";;;;;;;;;;;;AACA,4DAA+D;AAC/D,yCAAkD;AAClD,uBAAe,EAAE,CAAC;AAElB,6BAA+B;AAC/B,+DAA4C;AAC5C,sBAAoG;AACpG,+CAAyD;AACzD,mDAAmD;AACnD,8DAA6D;AAC7D,sCAAsC;AACtC,kDAAoD;AAEpD;IAA8B,4BAA+C;IAC3E,kBAAY,KAAqB;QAAjC,YACE,kBAAM,KAAK,CAAC,SAUb;QA+HD;;WAEG;QACK,qBAAe,GAAG,UAAC,eAAuB,EAAE,UAAsB;YACxE,IAAM,YAAY,GAAG,UAAU,GAAG,SAAG,CAAC,eAAe,EAAE,UAAU,CAAC,GAAG,SAAG,CAAC,eAAe,CAAC,CAAC;YAC1F,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC,CAAA;QAED;;WAEG;QACK,8BAAwB,GAAG,UAAC,UAAmB;YACrD,mBAAmB;YACnB,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,IAAI,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;YACtF,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC7C,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,gFAAgF;YAChF,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,SAAS;oBAC1C,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW;oBACvB,CAAC,YAAY,KAAM,KAAI,CAAC,KAAK,CAAC,OAAyB,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YACvF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,SAAS;oBAC1C,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW;oBACvB,CAAC,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;YACxC,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAA;QAED;;WAEG;QACK,6BAAuB,GAAG,UAAC,iBAA0B;YAC3D,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAE7C,IAAI,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACxC,IAAI,eAAe,GAAG,gCAAe,CAAC,UAAU,CAAC;YAEjD,oDAAoD;YACpD,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAChC,sFAAsF;gBACtF,SAAS,GAAG,iBAAiB,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBACxE,qCAAqC;gBACrC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACvC,eAAe,GAAG,gCAAe,CAAC,UAAU,CAAC;YAE/C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACjD,IAAM,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxF,IAAM,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExF,EAAE,CAAC,CAAC,WAAW,IAAI,iBAAiB,IAAI,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACrE,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;gBAC1C,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,iBAAiB,IAAI,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC3E,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;gBAC1C,CAAC;gBAED,eAAe,GAAG,gCAAe,CAAC,IAAI,CAAC;YACzC,CAAC;YAED,KAAI,CAAC,QAAQ,CAAC;gBACZ,YAAY,EAAE,SAAS;gBACvB,eAAe,iBAAA;aAChB,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,kBAAY,GAAG,UAAC,iBAA0B;YAChD,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC7C,IAAI,SAAS,GAAG,YAAY,CAAC;YAE7B,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,KAAK,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;YACvF,IAAM,MAAM,GAAI,KAAI,CAAC,KAAK,CAAC,OAAyB,CAAC,MAAM,CAAC;YAE5D,sBAAsB;YACtB,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtB,2BAA2B;gBAC3B,EAAE,CAAC,CAAC,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9B,SAAS,GAAG,YAAY,GAAG,CAAC,CAAC;gBAC/B,CAAC;gBAED,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACpB,SAAS,GAAG,CAAC,CAAC;gBAChB,CAAC;YACH,CAAC;YAED,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,+BAA+B;oBAC/B,SAAS,GAAG,YAAY,GAAG,CAAC,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtB,wFAAwF;oBACxF,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC,CAAA;QAED;;WAEG;QACK,yBAAmB,GAAG;YACpB,IAAA,6BAAO,CAAgB;YAC/B,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC7C,IAAI,MAAM,GAAiB,IAAI,CAAC;YAEhC,mCAAmC;YACnC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,MAAM,GAAG,IAAI,CAAC;YAChB,CAAC;YAED,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAO,CAAC,OAAO,CAAC,IAAI,YAAY,IAAI,CAAC,IAAK,OAAyB,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC;gBACnG,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;YACjC,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,MAAM,GAAG,OAAsB,CAAC;YAClC,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAA;QApQC,IAAM,YAAY,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAE7D,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAErC,KAAI,CAAC,KAAK,GAAG;YACX,YAAY,cAAA;YACZ,eAAe,EAAE,gCAAe,CAAC,IAAI;SACtC,CAAC;;IACJ,CAAC;IAED;;;OAGG;IACI,qCAAkB,GAAzB,UAA0B,SAAyB;QACjD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAE7B,IAAM,mBAAmB,GAAG,SAAS,CAAC,gBAAgB,IAAI,SAAS,CAAC,OAAO,GAAI,SAAS,CAAC,OAAuB,CAAC,GAAG,GAAG,IAAI,CAAC;QAC5H,IAAM,mBAAmB,GAAG,SAAS,CAAC,gBAAgB,IAAI,SAAS,CAAC,OAAO,GAAI,SAAS,CAAC,OAAuB,CAAC,GAAG,GAAG,IAAI,CAAC;QAE5H,mGAAmG;QACnG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,KAAK,gCAAe,CAAC,UAAU,IAAI,mBAAmB,IAAI,IAAI,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,CAAC,CAAC;YAC3I,IAAI,CAAC,QAAQ,CAAC;gBACZ,eAAe,EAAE,gCAAe,CAAC,IAAI;aACtC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGM,yBAAM,GAAb;QAAA,iBAkDC;QAjDO,IAAA,eAA8C,EAA5C,8BAAY,EAAE,oCAAe,CAAgB;QAC/C,IAAA,eAAqJ,EAAnJ,oCAAe,EAAE,kDAAsB,EAAE,kDAAsB,EAAE,sCAAgB,EAAE,sCAAgB,EAAE,oEAA+B,CAAgB;QAE5J,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,aAAa,CAAC;QACzG,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC;QAC1G,IAAM,UAAU,GAAG,eAAe,KAAK,gCAAe,CAAC,UAAU,CAAC;QAElE,IAAM,kBAAkB,GAAG,UAAU,IAAI,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAM,kBAAkB,GAAG,UAAU,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAE7E,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,oBAAC,iBAAO,OAAG,CAAC;QACjG,IAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3C,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,8BAAM,CAAC,SAAS,EAAE,eAAe,CAAC;YACrE,6BAAK,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,sBAAsB,CAAC,EACxF,OAAO,EAAE,cAAQ,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAAC,KAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;gBAAC,CAAC,CAAC,CAAC;gBACvF,oBAAC,mBAAU,IACT,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,EAC9E,SAAS,EAAE,EAAE,QAAQ,EAAE,kBAAkB,EAAE,EAC3C,QAAQ,EAAE,kBAAkB,EAC5B,OAAO,EAAE,cAAQ,KAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAI,CACzD;YAEN,6BAAK,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,8BAAM,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;gBAEjF,UAAU;oBACV,6BAAK,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,8BAAM,CAAC,gBAAgB,EAAE,+BAA+B,CAAC,IAC3F,gBAAgB,CACb;gBAIN,CAAC,UAAU,IAAI,OAAO;oBACtB,OAAO,CAGL;YAEN,6BAAK,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,sBAAsB,CAAC,EACxF,OAAO,EAAE,cAAQ,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAAC,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;gBAAC,CAAC,CAAC,CAAC;gBACtF,oBAAC,mBAAU,IACT,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,EAC7E,SAAS,EAAE,EAAE,QAAQ,EAAE,kBAAkB,EAAE,EAC3C,QAAQ,EAAE,kBAAkB,EAC5B,OAAO,EAAE,cAAQ,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAI,CACxD,CACF,CACP,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,2CAAwB,GAAhC;QACE,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,yBAAsB,CAAC,KAAK,CAAC;QAChH,IAAI,oBAAoB,GAAG,EAAE,CAAC;QAC9B,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC3B,KAAK,yBAAsB,CAAC,KAAK;gBAC/B,oBAAoB,GAAG,8BAAM,CAAC,qBAAqB,CAAC;gBACpD,KAAK,CAAC;YACR,KAAK,yBAAsB,CAAC,WAAW;gBACrC,oBAAoB,GAAG,8BAAM,CAAC,oBAAoB,CAAC;gBACnD,KAAK,CAAC;YACR,KAAK,yBAAsB,CAAC,MAAM;gBAChC,oBAAoB,GAAG,8BAAM,CAAC,sBAAsB,CAAC;gBACrD,KAAK,CAAC;YACR;gBACE,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,0BAAuB,CAAC,GAAG,CAAC;QAC9G,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACxB,KAAK,0BAAuB,CAAC,GAAG;gBAC9B,kBAAkB,GAAG,8BAAM,CAAC,qBAAqB,CAAC;gBAClD,KAAK,CAAC;YACR,KAAK,0BAAuB,CAAC,MAAM;gBACjC,kBAAkB,GAAG,8BAAM,CAAC,uBAAuB,CAAC;gBACpD,KAAK,CAAC;YACR,KAAK,0BAAuB,CAAC,MAAM;gBACjC,kBAAkB,GAAG,8BAAM,CAAC,sBAAsB,CAAC;gBACnD,KAAK,CAAC;YACR;gBACE,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAM,MAAM,GAAG,SAAG,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,kCAAe,GAAvB,UAAwB,UAAmB;QACzC,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,yBAAsB,CAAC,KAAK,CAAC;QAChH,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,EAAE,CAAC,CAAC,kBAAkB,KAAK,yBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;YAC9D,MAAM,GAAG,UAAU,GAAG,8BAAM,CAAC,qBAAqB,GAAG,8BAAM,CAAC,qBAAqB,CAAC;QACpF,CAAC;QAED,MAAM,CAAC,SAAG,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAgIH,eAAC;AAAD,CAzQA,AAyQC,CAzQ6B,KAAK,CAAC,SAAS,GAyQ5C;AAzQY,4BAAQ","file":"controls/carousel/Carousel.js","sourcesContent":["\r\nimport { IconButton } from \"office-ui-fabric-react/lib/Button\";\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\nimport * as React from \"react\";\r\nimport styles from \"./Carousel.module.scss\";\r\nimport { ICarouselProps, ICarouselState, CarouselButtonsDisplay, CarouselButtonsLocation } from \".\";\r\nimport { css, ICssInput } from \"@uifabric/utilities/lib\";\r\nimport { ProcessingState } from \"./ICarouselState\";\r\nimport { Spinner } from \"office-ui-fabric-react/lib/Spinner\";\r\nimport { isArray } from \"@pnp/common\";\r\nimport * as telemetry from '../../common/telemetry';\r\n\r\nexport class Carousel extends React.Component<ICarouselProps, ICarouselState> {\r\n  constructor(props: ICarouselProps) {\r\n    super(props);\r\n\r\n    const currentIndex = props.startIndex ? props.startIndex : 0;\r\n\r\n    telemetry.track('ReactCarousel', {});\r\n\r\n    this.state = {\r\n      currentIndex,\r\n      processingState: ProcessingState.idle\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handles component update lifecycle method.\r\n   * @param prevProps\r\n   */\r\n  public componentDidUpdate(prevProps: ICarouselProps) {\r\n    const currProps = this.props;\r\n\r\n    const prevPropsElementKey = prevProps.triggerPageEvent && prevProps.element ? (prevProps.element as JSX.Element).key : null;\r\n    const nextPropsElementKey = currProps.triggerPageEvent && currProps.element ? (currProps.element as JSX.Element).key : null;\r\n\r\n    // Checking if component is in processing state and the key of the current element has been changed\r\n    if (this.state.processingState === ProcessingState.processing && nextPropsElementKey != null && prevPropsElementKey != nextPropsElementKey) {\r\n      this.setState({\r\n        processingState: ProcessingState.idle\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  public render(): React.ReactElement<ICarouselProps> {\r\n    const { currentIndex, processingState } = this.state;\r\n    const { containerStyles, contentContainerStyles, containerButtonsStyles, prevButtonStyles, nextButtonStyles, loadingComponentContainerStyles } = this.props;\r\n\r\n    const prevButtonIconName = this.props.prevButtonIconName ? this.props.prevButtonIconName : \"ChevronLeft\";\r\n    const nextButtonIconName = this.props.nextButtonIconName ? this.props.nextButtonIconName : \"ChevronRight\";\r\n    const processing = processingState === ProcessingState.processing;\r\n\r\n    const prevButtonDisabled = processing || this.isCarouselButtonDisabled(false);\r\n    const nextButtonDisabled = processing || this.isCarouselButtonDisabled(true);\r\n\r\n    const loadingComponent = this.props.loadingComponent ? this.props.loadingComponent : <Spinner />;\r\n    const element = this.getElementToDisplay();\r\n\r\n    return (\r\n      <div className={this.getMergedStyles(styles.container, containerStyles)}>\r\n        <div className={this.getMergedStyles(this.getButtonContainerStyles(), containerButtonsStyles)}\r\n             onClick={() => { if (!prevButtonDisabled) { this.onCarouselButtonClicked(false); } }} >\r\n          <IconButton\r\n            className={this.getMergedStyles(this.getButtonStyles(false), prevButtonStyles)}\r\n            iconProps={{ iconName: prevButtonIconName }}\r\n            disabled={prevButtonDisabled}\r\n            onClick={() => { this.onCarouselButtonClicked(false); }} />\r\n        </div>\r\n\r\n        <div className={this.getMergedStyles(styles.contentContainer, contentContainerStyles)}>\r\n          {\r\n            processing &&\r\n            <div className={this.getMergedStyles(styles.loadingComponent, loadingComponentContainerStyles)}>\r\n              {loadingComponent}\r\n            </div>\r\n          }\r\n\r\n          {\r\n            !processing && element &&\r\n            element\r\n          }\r\n\r\n        </div>\r\n\r\n        <div className={this.getMergedStyles(this.getButtonContainerStyles(), containerButtonsStyles)}\r\n             onClick={() => { if (!nextButtonDisabled) { this.onCarouselButtonClicked(true); } }}>\r\n          <IconButton\r\n            className={this.getMergedStyles(this.getButtonStyles(true), nextButtonStyles)}\r\n            iconProps={{ iconName: nextButtonIconName }}\r\n            disabled={nextButtonDisabled}\r\n            onClick={() => { this.onCarouselButtonClicked(true); }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return merged styles for Button containers.\r\n   */\r\n  private getButtonContainerStyles(): string {\r\n    const buttonsDisplayMode = this.props.buttonsDisplay ? this.props.buttonsDisplay : CarouselButtonsDisplay.block;\r\n    let buttonDisplayModeCss = \"\";\r\n    switch (buttonsDisplayMode) {\r\n      case CarouselButtonsDisplay.block:\r\n        buttonDisplayModeCss = styles.blockButtonsContainer;\r\n        break;\r\n      case CarouselButtonsDisplay.buttonsOnly:\r\n        buttonDisplayModeCss = styles.buttonsOnlyContainer;\r\n        break;\r\n      case CarouselButtonsDisplay.hidden:\r\n        buttonDisplayModeCss = styles.hiddenButtonsContainer;\r\n        break;\r\n      default:\r\n        return \"\";\r\n    }\r\n\r\n    const buttonsLocation = this.props.buttonsLocation ? this.props.buttonsLocation : CarouselButtonsLocation.top;\r\n    let buttonsLocationCss = \"\";\r\n    switch (buttonsLocation) {\r\n      case CarouselButtonsLocation.top:\r\n        buttonsLocationCss = styles.blockButtonsContainer;\r\n        break;\r\n      case CarouselButtonsLocation.center:\r\n        buttonsLocationCss = styles.centralButtonsContainer;\r\n        break;\r\n      case CarouselButtonsLocation.bottom:\r\n        buttonsLocationCss = styles.bottomButtonsContainer;\r\n        break;\r\n      default:\r\n        return \"\";\r\n    }\r\n\r\n    const result = css(buttonDisplayModeCss, buttonsLocationCss);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Return merged styles for Buttons.\r\n   * @param nextButton\r\n   */\r\n  private getButtonStyles(nextButton: boolean) {\r\n    const buttonsDisplayMode = this.props.buttonsDisplay ? this.props.buttonsDisplay : CarouselButtonsDisplay.block;\r\n    let result = \"\";\r\n    if (buttonsDisplayMode === CarouselButtonsDisplay.buttonsOnly) {\r\n      result = nextButton ? styles.buttonsOnlyNextButton : styles.buttonsOnlyPrevButton;\r\n    }\r\n\r\n    return css(result);\r\n  }\r\n\r\n  /**\r\n   * Merges the styles of the components.\r\n   */\r\n  private getMergedStyles = (componentStyles: string, userStyles?: ICssInput): string => {\r\n    const mergedStyles = userStyles ? css(componentStyles, userStyles) : css(componentStyles);\r\n    return mergedStyles;\r\n  }\r\n\r\n  /**\r\n   * Determines if the carousel button can be clicked.\r\n   */\r\n  private isCarouselButtonDisabled = (nextButton: boolean): boolean => {\r\n    // false by default\r\n    const isInfinite = this.props.isInfinite != undefined ? this.props.isInfinite : false;\r\n    const currentIndex = this.state.currentIndex;\r\n    let result = false;\r\n\r\n    // Use validation from parent control or calcualte it based on the current index\r\n    if (nextButton) {\r\n      result = this.props.canMoveNext != undefined ?\r\n        !this.props.canMoveNext :\r\n        (currentIndex === (this.props.element as JSX.Element[]).length - 1) && !isInfinite;\r\n    } else {\r\n      result = this.props.canMovePrev != undefined ?\r\n        !this.props.canMovePrev :\r\n        (0 === currentIndex) && !isInfinite;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Handles carousel button click.\r\n   */\r\n  private onCarouselButtonClicked = (nextButtonClicked: boolean): void => {\r\n    const currentIndex = this.state.currentIndex;\r\n\r\n    let nextIndex = this.state.currentIndex;\r\n    let processingState = ProcessingState.processing;\r\n\r\n    // Trigger parent control to update provided element\r\n    if (this.props.triggerPageEvent) {\r\n      // Index validation needs to be done by the parent control specyfing canMove Next|Prev\r\n      nextIndex = nextButtonClicked ? (currentIndex + 1) : (currentIndex - 1);\r\n      // Trigger parent to provide new data\r\n      this.props.triggerPageEvent(nextIndex);\r\n      processingState = ProcessingState.processing;\r\n\r\n    } else {\r\n      nextIndex = this.getNextIndex(nextButtonClicked);\r\n      const canMoveNext = this.props.canMoveNext != undefined ? this.props.canMoveNext : true;\r\n      const canMovePrev = this.props.canMovePrev != undefined ? this.props.canMovePrev : true;\r\n\r\n      if (canMoveNext && nextButtonClicked && this.props.onMoveNextClicked) {\r\n        this.props.onMoveNextClicked(nextIndex);\r\n      }\r\n      else if (canMovePrev && !nextButtonClicked && this.props.onMovePrevClicked) {\r\n        this.props.onMovePrevClicked(nextIndex);\r\n      }\r\n\r\n      processingState = ProcessingState.idle;\r\n    }\r\n\r\n    this.setState({\r\n      currentIndex: nextIndex,\r\n      processingState\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns next index after carousel button is clicked.\r\n   */\r\n  private getNextIndex = (nextButtonClicked: boolean): number => {\r\n    const currentIndex = this.state.currentIndex;\r\n    let nextIndex = currentIndex;\r\n\r\n    const isInfinite = this.props.isInfinite !== undefined ? this.props.isInfinite : false;\r\n    const length = (this.props.element as JSX.Element[]).length;\r\n\r\n    // Next Button clicked\r\n    if (nextButtonClicked) {\r\n      // If there is next element\r\n      if (currentIndex < length - 1) {\r\n        nextIndex = currentIndex + 1;\r\n      }\r\n      // In no more elements are available but it isInfiniteLoop -> reset index to the first element\r\n      else if (isInfinite) {\r\n        nextIndex = 0;\r\n      }\r\n    }\r\n    // Prev Button clicked\r\n    else {\r\n      if (currentIndex - 1 >= 0) {\r\n        // If there is previous element\r\n        nextIndex = currentIndex - 1;\r\n      } else if (isInfinite) {\r\n        // If there is no previous element but isInfitineLoop -> reset index to the last element\r\n        nextIndex = length - 1;\r\n      }\r\n    }\r\n\r\n    return nextIndex;\r\n  }\r\n\r\n  /**\r\n   * Returns current element to be displayed.\r\n   */\r\n  private getElementToDisplay = (): JSX.Element => {\r\n    const { element } = this.props;\r\n    const currentIndex = this.state.currentIndex;\r\n    let result : JSX.Element = null;\r\n\r\n    // If no element has been provided.\r\n    if (!element) {\r\n      result = null;\r\n    }\r\n    // Retrieve proper element from the array\r\n    else if (isArray(element) && currentIndex >= 0 && (element as JSX.Element[]).length > currentIndex) {\r\n      result = element[currentIndex];\r\n    }\r\n    else {\r\n      result = element as JSX.Element;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}