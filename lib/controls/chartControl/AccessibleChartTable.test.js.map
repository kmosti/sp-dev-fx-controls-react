{"version":3,"sources":["controls/chartControl/AccessibleChartTable.test.tsx"],"names":[],"mappings":"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","file":"controls/chartControl/AccessibleChartTable.test.js","sourcesContent":["/// <reference types=\"sinon\" />\r\n\r\nimport * as React from 'react';\r\nimport { expect } from 'chai';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport { AccessibleChartTable, ChartType } from './';\r\nimport styles from './ChartControl.module.scss';\r\n\r\ndeclare const sinon;\r\n\r\ndescribe('<AccessibleChartTable />', () => {\r\n  let tableControl: ReactWrapper;\r\n  const dummyClass: string = \"DummyClass\";\r\n  const dummyCaption: string = \"Dummy Summary\";\r\n  const dummyTitle: string = \"Dummy Title\";\r\n  const dummySummary: string = \"Dummy Summary\";\r\n  const dummyLabels: string[] = ['Human', 'Chimp', 'Dolphin', 'Cat'];\r\n  const dummyXAxisLabel: string = \"X\";\r\n  const dummyYAxisLabel: string = \"Y\";\r\n  const dummyDatasetLabel: string = \"Millions\";\r\n  const dummyDatasetData: number[] = [11000, 6200, 5800, 300];\r\n  const dummyDatasetLabel2: string = \"Minions\";\r\n  const dummyDatasetData2: number[] = [12000, 7200, 6800, 400];\r\n  const dummyData: Chart.ChartData = {\r\n    labels: dummyLabels,\r\n    datasets: [\r\n      {\r\n        label: dummyDatasetLabel,\r\n        data: dummyDatasetData\r\n      }\r\n    ]\r\n  };\r\n\r\n  const dummyDataNoLabels: Chart.ChartData = {\r\n    datasets: [\r\n      {\r\n        label: dummyDatasetLabel,\r\n        data: dummyDatasetData\r\n      }\r\n    ]\r\n  };\r\n\r\n  const dummyOptions: Chart.ChartOptions = {\r\n    title: {\r\n      text: dummyTitle\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          scaleLabel: {\r\n            labelString: dummyXAxisLabel\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            labelString: dummyYAxisLabel\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const dummyMultisetData: Chart.ChartData = {\r\n    labels: dummyLabels,\r\n    datasets: [\r\n      {\r\n        label: dummyDatasetLabel,\r\n        data: dummyDatasetData\r\n      },\r\n      {\r\n        label: dummyDatasetLabel2,\r\n        data: dummyDatasetData2\r\n      }\r\n    ]\r\n  };\r\n\r\n\r\n  afterEach(() => {\r\n    tableControl.unmount();\r\n  });\r\n\r\n\r\n  it('Should render only one table', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData}  />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable}`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Should render with a custom className if one is provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} className={dummyClass} />);\r\n    expect(tableControl.find(`div.${dummyClass}`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Should render a caption if one is provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} caption={dummyCaption} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption`).text()).to.be.equal(dummyCaption);\r\n    done();\r\n  });\r\n\r\n  it('Should render a caption if no caption is provided but a title is available', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} chartOptions={dummyOptions} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption`).text()).to.be.equal(dummyTitle);\r\n    done();\r\n  });\r\n\r\n  it('Should prioritize the caption if both caption and title are provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} chartOptions={dummyOptions} caption={dummyCaption} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption`).text()).to.be.equal(dummyCaption);\r\n    done();\r\n  });\r\n\r\n  it('Should render the same number of rows as there are data elements', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData}  />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`)).to.have.length(4);\r\n    done();\r\n  });\r\n\r\n  it('Should render a table matching the data provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData}  />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(0).find('th').at(0).text()).to.equal('Human');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(1).find('th').at(0).text()).to.equal('Chimp');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(2).find('th').at(0).text()).to.equal('Dolphin');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(3).find('th').at(0).text()).to.equal('Cat');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(0).find('td').at(0).text()).to.equal('11000');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(1).find('td').at(0).text()).to.equal('6200');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(2).find('td').at(0).text()).to.equal('5800');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(3).find('td').at(0).text()).to.equal('300');\r\n    done();\r\n  });\r\n\r\n  it('Should include a summary in the caption if one is provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} summary={dummySummary} caption={dummyCaption} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption br`)).to.have.length(1);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption span`)).to.have.length(1);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption span`).text()).to.be.equals(dummySummary);\r\n    done();\r\n  });\r\n\r\n  it('Should include a summary in the caption if one is provided -- even if no title is provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} summary={dummySummary}/>);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption br`)).to.have.length(0);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption span`)).to.have.length(1);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table caption span`).text()).to.be.equals(dummySummary);\r\n    done();\r\n  });\r\n\r\n  it('Should do nothing if there are no data labels', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyDataNoLabels}  />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table`)).to.have.length(0);\r\n    done();\r\n  });\r\n\r\n  it('Should render an X and Y label if axis labels are provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyData} chartOptions={dummyOptions} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th').at(0).text()).to.be.equal(\"\");\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th')).to.have.length(2);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th').at(1).text()).to.be.equal(dummyYAxisLabel);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th')).to.have.length(2);\r\n\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th').at(1).text()).to.be.equal(dummyDatasetLabel);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th').at(0).text()).to.be.equal(dummyXAxisLabel);\r\n    done();\r\n  });\r\n\r\n  it('Should render multi dataset labels', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyMultisetData} chartOptions={dummyOptions} />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th').at(0).text()).to.be.equal(\"\");\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th')).to.have.length(2);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(0).find('th').at(1).text()).to.be.equal(dummyYAxisLabel);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th')).to.have.length(3);\r\n\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th').at(0).text()).to.be.equal(dummyXAxisLabel);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th').at(1).text()).to.be.equal(dummyDatasetLabel);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table thead tr`).at(1).find('th').at(2).text()).to.be.equal(dummyDatasetLabel2);\r\n    done();\r\n  });\r\n\r\n  it('Should render a multi dataset table matching the data provided', (done) => {\r\n    tableControl = mount(<AccessibleChartTable chartType={ChartType.Bar} data={dummyMultisetData}  />);\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(0).find('th').at(0).text()).to.equal('Human');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(1).find('th').at(0).text()).to.equal('Chimp');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(2).find('th').at(0).text()).to.equal('Dolphin');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(3).find('th').at(0).text()).to.equal('Cat');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(0).find('td').at(0).text()).to.equal('11000');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(1).find('td').at(0).text()).to.equal('6200');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(2).find('td').at(0).text()).to.equal('5800');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(3).find('td').at(0).text()).to.equal('300');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(0).find('td').at(1).text()).to.equal('12000');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(1).find('td').at(1).text()).to.equal('7200');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(2).find('td').at(1).text()).to.equal('6800');\r\n    expect(tableControl.find(`div.${styles.accessibleTable} table tbody tr`).at(3).find('td').at(1).text()).to.equal('400');\r\n    done();\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}