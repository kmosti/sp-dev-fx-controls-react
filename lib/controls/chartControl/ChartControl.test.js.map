{"version":3,"sources":["controls/chartControl/ChartControl.test.tsx"],"names":[],"mappings":"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","file":"controls/chartControl/ChartControl.test.js","sourcesContent":["/// <reference types=\"sinon\" />\r\n\r\nimport * as React from 'react';\r\nimport { assert, expect } from 'chai';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport { ChartControl } from './ChartControl';\r\nimport styles from './ChartControl.module.scss';\r\n\r\ndeclare const sinon;\r\n\r\n\r\n\r\ndescribe('<ChartControl />', () => {\r\n  let chartControl: ReactWrapper;\r\n  const dummyTitle = \"Dummy Title\";\r\n  const dummyClass = \"DummyClass\";\r\n  const dummySummary = \"Dummy Summary\";\r\n  const dummyData = {\r\n    labels: ['Human', 'Chimp', 'Dolphin', 'Cat'],\r\n    datasets: [\r\n      {\r\n        label: 'Millions',\r\n        data: [\r\n          11000, 6200, 5800, 300\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  afterEach(() => {\r\n    chartControl.unmount();\r\n  });\r\n\r\n  it('Check that an accessible table gets created by default', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable}`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that the accessible table accepts a custom classname', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData} accessibility={{ className: \"customClass\"}} />);\r\n    expect(chartControl.find(`div.customClass`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that the accessible table doesn\\'t get rendered if disabled', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData} accessibility={{enable:false}}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable}`)).to.have.length(0);\r\n    done();\r\n  });\r\n\r\n  it('Check that an accessible table gets created with the caption matching the title', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} accessibility={{enable:true}} options={{title:{ text:dummyTitle}}} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable} table caption`).text()).to.be.equal(dummyTitle);\r\n    done();\r\n  });\r\n\r\n  it('Check that an accessible table gets created with a caption', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} accessibility={{enable:true, caption: dummyTitle}} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable} table caption`).text()).to.be.equal(dummyTitle);\r\n    done();\r\n  });\r\n\r\n  it('Check that the accessible table has a number of rows matching the number of data elements', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable} table tbody tr`)).to.have.length(4);\r\n    done();\r\n  });\r\n\r\n  it('Check that the accessible table has only one header row', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.accessibleTable} table thead tr`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that custom class gets rendered', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} className={dummyClass} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${dummyClass}`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that a canvas gets rendered', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData}  />);\r\n    expect(chartControl.find(`div.${styles.chartComponent} canvas`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that it doesn\\'t crash if data is omitted', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} />);\r\n    expect(chartControl.find(`div.${styles.chartComponent} canvas`)).to.have.length(1);\r\n    expect(chartControl.find(`div.${styles.accessibleTable}`)).to.have.length(0);\r\n    done();\r\n  });\r\n\r\n  it('Check that it applies a themed background by default', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData} />);\r\n    expect(chartControl.find(`div.${styles.chartComponent}.${styles.themed}`)).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('Check that it disables themed background when useTheme is set to false', (done) => {\r\n    chartControl = mount(<ChartControl type={\"bar\"} data={dummyData} useTheme={false} />);\r\n    expect(chartControl.find(`div.${styles.chartComponent}.${styles.themed}`)).to.have.length(0);\r\n    done();\r\n  });\r\n\r\n});\r\n\r\n\r\n"],"sourceRoot":"..\\..\\..\\src"}