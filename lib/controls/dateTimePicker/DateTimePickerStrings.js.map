{"version":3,"sources":["controls/dateTimePicker/DateTimePickerStrings.ts"],"names":[],"mappings":";;AAAA,wCAA0C;AAG1C;;GAEG;AACH;IAAA;QACE;;;WAGG;QACI,WAAM,GAAa;YACxB,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,sBAAsB;YAC9B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,2BAA2B;SACpC,CAAC;QACF;;;WAGG;QACI,gBAAW,GAAa;YAC7B,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,6BAA6B;YACrC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,4BAA4B;SACrC,CAAC;QACF;;;WAGG;QACI,SAAI,GAAa;YACtB,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,yBAAyB;SAClC,CAAC;QACF;;;WAGG;QACI,cAAS,GAAa;YAC3B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;SACnC,CAAC;QACF;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,mBAAmB,CAAC;QACvD;;WAEG;QACI,2BAAsB,GAAW,OAAO,CAAC,gCAAgC,CAAC;QACjF;;WAEG;QACI,6BAAwB,GAAW,OAAO,CAAC,kCAAkC,CAAC;QACrF;;WAEG;QACI,8BAAyB,GAAW,OAAO,CAAC,mCAAmC,CAAC;QACvF;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,kBAAkB,CAAC;QACtD;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,kBAAkB,CAAC;QACtD;;WAEG;QACI,kBAAa,GAAW,OAAO,CAAC,2BAA2B,CAAC;IACrE,CAAC;IAAD,4BAAC;AAAD,CA3FA,AA2FC,IAAA;AA3FY,sDAAqB","file":"controls/dateTimePicker/DateTimePickerStrings.js","sourcesContent":["import * as strings from 'ControlStrings';\r\nimport { IDateTimePickerStrings } from '.';\r\n\r\n/**\r\n * Defines the labels of the DatePicker control (as months, days, etc.)\r\n */\r\nexport class DateTimePickerStrings implements IDateTimePickerStrings {\r\n  /**\r\n   * An array of strings for the full names of months.\r\n   * The array is 0-based, so months[0] should be the full name of January.\r\n   */\r\n  public months: string[] = [\r\n    strings.DatePickerMonthLongJanuary,\r\n    strings.DatePickerMonthLongFebruary,\r\n    strings.DatePickerMonthLongMarch,\r\n    strings.DatePickerMonthLongApril,\r\n    strings.DatePickerMonthLongMay,\r\n    strings.DatePickerMonthLongJune,\r\n    strings.DatePickerMonthLongJuly,\r\n    strings.DatePickerMonthLongAugust,\r\n    strings.DatePickerMonthLongSeptember,\r\n    strings.DatePickerMonthLongOctober,\r\n    strings.DatePickerMonthLongNovember,\r\n    strings.DatePickerMonthLongDecember\r\n  ];\r\n  /**\r\n   * An array of strings for the short names of months.\r\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\r\n   */\r\n  public shortMonths: string[] = [\r\n    strings.DatePickerMonthShortJanuary,\r\n    strings.DatePickerMonthShortFebruary,\r\n    strings.DatePickerMonthShortMarch,\r\n    strings.DatePickerMonthShortApril,\r\n    strings.DatePickerMonthShortMay,\r\n    strings.DatePickerMonthShortJune,\r\n    strings.DatePickerMonthShortJuly,\r\n    strings.DatePickerMonthShortAugust,\r\n    strings.DatePickerMonthShortSeptember,\r\n    strings.DatePickerMonthShortOctober,\r\n    strings.DatePickerMonthShortNovember,\r\n    strings.DatePickerMonthShortDecember\r\n  ];\r\n  /**\r\n   * An array of strings for the full names of days of the week.\r\n   * The array is 0-based, so days[0] should be the full name of Sunday.\r\n   */\r\n  public days: string[] = [\r\n    strings.DatePickerDayLongSunday,\r\n    strings.DatePickerDayLongMonday,\r\n    strings.DatePickerDayLongTuesday,\r\n    strings.DatePickerDayLongWednesday,\r\n    strings.DatePickerDayLongThursday,\r\n    strings.DatePickerDayLongFriday,\r\n    strings.DatePickerDayLongSaturday\r\n  ];\r\n  /**\r\n   * An array of strings for the initials of the days of the week.\r\n   * The array is 0-based, so days[0] should be the initial of Sunday.\r\n   */\r\n  public shortDays: string[] = [\r\n    strings.DatePickerDayShortSunday,\r\n    strings.DatePickerDayShortMonday,\r\n    strings.DatePickerDayShortTuesday,\r\n    strings.DatePickerDayShortWednesday,\r\n    strings.DatePickerDayShortThursday,\r\n    strings.DatePickerDayShortFriday,\r\n    strings.DatePickerDayShortSaturday\r\n  ];\r\n  /**\r\n   * String to render for button to direct the user to today's date.\r\n   */\r\n  public goToToday: string = strings.DatePickerGoToToday;\r\n  /**\r\n   * Error message to render for TextField if isRequired validation fails.\r\n   */\r\n  public isRequiredErrorMessage: string = strings.DatePickerIsRequiredErrorMessage;\r\n  /**\r\n   * Error message to render for TextField if input date string parsing fails.\r\n   */\r\n  public invalidInputErrorMessage: string = strings.DatePickerInvalidInputErrorMessage;\r\n  /**\r\n   * Error message to render for TextField if date boundary (minDate, maxDate) validation fails.\r\n   */\r\n  public isOutOfBoundsErrorMessage: string = strings.DatePickerIsOutOfBoundsErrorMessage;\r\n  /**\r\n   * Label for the date selector.\r\n   */\r\n  public dateLabel: string = strings.DateTimePickerDate;\r\n  /**\r\n   * Label for the time of day selector.\r\n   */\r\n  public timeLabel: string = strings.DateTimePickerTime;\r\n  /**\r\n   * Separator between time of day components (hours, minutes, seconds).\r\n   */\r\n  public timeSeparator: string = strings.DateTimePickerTimeSeparator;\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}