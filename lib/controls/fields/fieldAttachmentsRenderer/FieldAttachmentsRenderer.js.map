{"version":3,"sources":["controls/fields/fieldAttachmentsRenderer/FieldAttachmentsRenderer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,6BAA+B;AAC/B,kEAA2D;AAC3D,wDAAuD;AAEvD,qDAAuD;AAEvD,+FAA4D;AAmB5D;;;;GAIG;AACH;IAA8C,4CAA+E;IACzH,kCAAmB,KAAqC,EAAE,KAAqC;QAA/F,YACI,kBAAM,KAAK,EAAE,KAAK,CAAC,SAKtB;QAHG,SAAS,CAAC,KAAK,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;QAEhD,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IACpB,CAAC;IAGM,yCAAM,GAAb;QACI,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,8CAAM,CAAC,SAAS,EAAE,8CAAM,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IACrG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,oBAAC,WAAI,IAAC,QAAQ,EAAE,QAAQ,GAAS,CACpD,CACT,CAAC;IACN,CAAC;IAND;QADC,qBAAQ;0DAOR;IACL,+BAAC;CAjBD,AAiBC,CAjB6C,KAAK,CAAC,SAAS,GAiB5D;AAjBY,4DAAwB","file":"controls/fields/fieldAttachmentsRenderer/FieldAttachmentsRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport styles from './FieldAttachmentsRenderer.module.scss';\r\n\r\n/**\r\n * Attachments renderer props\r\n */\r\nexport interface IFieldAttachmentsRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * amount of attachments\r\n     */\r\n    count?: number;\r\n}\r\n\r\n/**\r\n * For future\r\n */\r\nexport interface IFieldAttahcmentsRendererState {\r\n\r\n}\r\n\r\n/**\r\n * Attachments Renderer.\r\n * Used for:\r\n *   - Attachments\r\n */\r\nexport class FieldAttachmentsRenderer extends React.Component<IFieldAttachmentsRendererProps, IFieldAttahcmentsRendererState> {\r\n    public constructor(props: IFieldAttachmentsRendererProps, state: IFieldAttahcmentsRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldAttachmentsRenderer', {});\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={css(this.props.className, styles.container, styles.fabricIcon)} style={this.props.cssProps}>\r\n                {this.props.count && <Icon iconName={'Attach'}></Icon>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}