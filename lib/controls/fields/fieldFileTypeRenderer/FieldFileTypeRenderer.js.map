{"version":3,"sources":["controls/fields/fieldFileTypeRenderer/FieldFileTypeRenderer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,6BAA+B;AAC/B,kEAAgF;AAChF,wDAAuD;AAEvD,mDAA4D;AAC5D,qDAAuD;AAEvD,yFAAyD;AAqBzD;;;;GAIG;AACH;IAA2C,yCAAyE;IAClH,+BAAmB,KAAkC,EAAE,KAAkC;QAAzF,YACE,kBAAM,KAAK,EAAE,KAAK,CAAC,SAKpB;QAHC,SAAS,CAAC,KAAK,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QAE7C,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IAClB,CAAC;IAGM,sCAAM,GAAb;QACE,IAAM,cAAc,GAAwB,EAC3C,CAAC;QACF,cAAc,CAAC,2CAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpD,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,2CAAM,CAAC,SAAS,EAAE,2CAAM,CAAC,UAAU,EAAE,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IACvH,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,oBAAC,WAAI,IAAC,QAAQ,EAAE,kBAAkB,GAAI,GAAG,oBAAC,2BAAY,IAAC,IAAI,EAAE,uBAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI,CACxH,CACP,CAAC;IACJ,CAAC;IATD;QADC,qBAAQ;uDAUR;IACH,4BAAC;CApBD,AAoBC,CApB0C,KAAK,CAAC,SAAS,GAoBzD;AApBY,sDAAqB","file":"controls/fields/fieldFileTypeRenderer/FieldFileTypeRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css, ISerializableObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport { FileTypeIcon, IconType } from '../../fileTypeIcon';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport styles from './FieldFileTypeRenderer.module.scss';\r\nimport { findIndex } from '@microsoft/sp-lodash-subset';\r\n\r\nexport interface IFieldFileTypeRendererProps extends IFieldRendererProps {\r\n  /**\r\n   * file/document path\r\n   */\r\n  path: string;\r\n  /**\r\n   * true if the icon should be rendered for a folder, not file\r\n   */\r\n  isFolder?: boolean;\r\n}\r\n\r\n/**\r\n * For future\r\n */\r\nexport interface IFieldFileTypeRendererState {\r\n\r\n}\r\n\r\n/**\r\n * File Type Renderer.\r\n * Used for:\r\n *   - File/Document Type\r\n */\r\nexport class FieldFileTypeRenderer extends React.Component<IFieldFileTypeRendererProps, IFieldFileTypeRendererState> {\r\n  public constructor(props: IFieldFileTypeRendererProps, state: IFieldFileTypeRendererState) {\r\n    super(props, state);\r\n\r\n    telemetry.track('FieldFileTypeRenderer', {});\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  @override\r\n  public render(): JSX.Element {\r\n    const optionalStyles: ISerializableObject = {\r\n    };\r\n    optionalStyles[styles.folder] = this.props.isFolder;\r\n    return (\r\n      <div className={css(this.props.className, styles.container, styles.fabricIcon, optionalStyles)} style={this.props.cssProps}>\r\n        {this.props.isFolder ? <Icon iconName={'FabricFolderFill'} /> : <FileTypeIcon type={IconType.font} path={this.props.path} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}