{"version":3,"sources":["controls/fields/fieldLookupRenderer/FieldLookupRenderer.tsx"],"names":[],"mappings":"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","file":"controls/fields/fieldLookupRenderer/FieldLookupRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\n\r\nimport { ISPFieldLookupValue } from \"../../../common/SPEntities\";\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport styles from './FieldLookupRenderer.module.scss';\r\nimport { IFrameDialog } from '../../iFrameDialog/IFrameDialog';\r\nimport { SPHelper } from '../../../Utilities';\r\nimport { IContext } from '../../../Common';\r\n\r\n/**\r\n * Field Lookup Renderer Props\r\n * There are 3 options to provide the props:\r\n * - [recommended, used in FieldRendererHelper] Provide fieldId and context. In that case request for DispUrl will be sent only if a user clicks on the value\r\n * - Provide dispFormUrl: if you know this URL a priori you can provide it into the renderer\r\n * - Provide onClick handler to handle value's click event outside the renderer\r\n */\r\nexport interface IFieldLookupRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * lookup values\r\n     */\r\n    lookups: ISPFieldLookupValue[];\r\n    /**\r\n     * url of Display form for the list that is referenced in the lookup\r\n     */\r\n    dispFormUrl?: string;\r\n    /**\r\n     * custom event handler of lookup item click. If not set the dialog with Display Form will be shown\r\n     */\r\n    onClick?: (args: IFieldLookupClickEventArgs) => void;\r\n    /**\r\n     * Field's id.\r\n     */\r\n    fieldId?: string;\r\n    /**\r\n     * Customizer context. Must be providede if fieldId is set\r\n     */\r\n    context?: IContext;\r\n}\r\n\r\n/**\r\n * Field Lookup Renderer State\r\n */\r\nexport interface IFieldLookupRendererState {\r\n    hideDialog?: boolean;\r\n    lookupDispFormUrl?: string;\r\n    dispFormUrl?: string;\r\n}\r\n\r\n/**\r\n * Lookup click event arguments\r\n */\r\nexport interface IFieldLookupClickEventArgs {\r\n    lookup?: ISPFieldLookupValue;\r\n}\r\n\r\n/**\r\n * Field Lookup Renderer.\r\n * Used for:\r\n *   - Lookup, LookupMulti\r\n */\r\nexport class FieldLookupRenderer extends React.Component<IFieldLookupRendererProps, IFieldLookupRendererState> {\r\n    public constructor(props: IFieldLookupRendererProps, state: IFieldLookupRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldLookupRenderer', {});\r\n\r\n        this.state = {\r\n            hideDialog: true,\r\n            dispFormUrl: props.dispFormUrl\r\n        };\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        const lookupLinks: JSX.Element[] = this.props.lookups.map((lookup) => {\r\n            return <Link onClick={this._onClick.bind(this, lookup)} className={styles.lookup} style={this.props.cssProps}>{lookup.lookupValue}</Link>;\r\n        });\r\n        return (\r\n            <div style={this.props.cssProps} className={css(this.props.className)}>{lookupLinks}\r\n                {!this.state.hideDialog && this.state.dispFormUrl && <IFrameDialog\r\n                    url={this.state.lookupDispFormUrl}\r\n                    iframeOnLoad={this._onIframeLoaded.bind(this)}\r\n                    hidden={this.state.hideDialog}\r\n                    onDismiss={this._onDialogDismiss.bind(this)}\r\n                    modalProps={{\r\n                        isBlocking: true,\r\n                        containerClassName: styles.dialogContainer\r\n                    }}\r\n                    dialogContentProps={{\r\n                        type: DialogType.close,\r\n                        showCloseButton: true\r\n                    }}\r\n                    width={'570px'}\r\n                    height={'250px'} />}\r\n                {!this.state.hideDialog && !this.state.dispFormUrl && <Dialog\r\n                    onDismiss={this._onDialogDismiss.bind(this)}\r\n                    modalProps={{\r\n                        isBlocking: true,\r\n                        containerClassName: styles.dialogContainer\r\n                    }}\r\n                    dialogContentProps={{\r\n                        type: DialogType.close,\r\n                        showCloseButton: true\r\n                    }}>\r\n                    <Spinner size={SpinnerSize.large} />\r\n                </Dialog>}\r\n            </div>);\r\n    }\r\n\r\n    private _onClick(lookup: ISPFieldLookupValue): void {\r\n        if (this.props.onClick) {\r\n            const args: IFieldLookupClickEventArgs = {\r\n                lookup: lookup\r\n            };\r\n            this.props.onClick(args);\r\n            return;\r\n        }\r\n\r\n        //\r\n        // showing Display Form in the dialog\r\n        //\r\n        const dispFormUrl = this.state.dispFormUrl;\r\n        if (dispFormUrl) {\r\n            this.setState({\r\n                lookupDispFormUrl: `${dispFormUrl}${(dispFormUrl.indexOf('?') === -1 ? '?' : '&')}ID=${lookup.lookupId}&RootFolder=*&IsDlg=1`,\r\n                hideDialog: false\r\n            });\r\n        }\r\n        else if (this.props.fieldId) {\r\n            this.setState({\r\n                hideDialog: false\r\n            });\r\n\r\n            SPHelper.getLookupFieldListDispFormUrl(this.props.fieldId, this.props.context).then(dispFormUrlValue => {\r\n                const listDispFormUrl: string = dispFormUrlValue.toString();\r\n                this.setState((prevState, props) => {\r\n                    if (prevState.hideDialog) {\r\n                        return;\r\n                    }\r\n\r\n                    return {\r\n                        dispFormUrl: listDispFormUrl,\r\n                        lookupDispFormUrl: `${listDispFormUrl}&ID=${lookup.lookupId}&RootFolder=*&IsDlg=1`\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private _onIframeLoaded(iframe: any): void {\r\n        //\r\n        // some additional configuration to beutify content of the iframe\r\n        //\r\n        const iframeWindow: Window = iframe.contentWindow;\r\n        const iframeDocument: Document = iframeWindow.document;\r\n\r\n        const s4Workspace: HTMLDivElement = iframeDocument.getElementById('s4-workspace') as HTMLDivElement;\r\n        s4Workspace.style.height = iframe.style.height;\r\n\r\n        s4Workspace.scrollIntoView();\r\n    }\r\n\r\n    private _onDialogDismiss(): void {\r\n        this.setState({\r\n            hideDialog: true\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}