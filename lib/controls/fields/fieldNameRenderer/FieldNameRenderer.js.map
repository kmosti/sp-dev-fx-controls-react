{"version":3,"sources":["controls/fields/fieldNameRenderer/FieldNameRenderer.tsx"],"names":[],"mappings":"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","file":"controls/fields/fieldNameRenderer/FieldNameRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\n\r\nimport { FieldBaseTextRenderer } from '../fieldBaseTextRenderer/FieldBaseTextRenderer';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport styles from './FieldNameRenderer.module.scss';\r\n\r\nexport interface IFieldNameRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * text to display\r\n     */\r\n    text?: string;\r\n    /**\r\n     * if the Name should be rendered as link\r\n     */\r\n    isLink: boolean;\r\n    /**\r\n     * path to the document\r\n     */\r\n    filePath?: string;\r\n    /**\r\n     * true if the document is new\r\n     */\r\n    isNew?: boolean;\r\n    /**\r\n     * true if the document type has preview (true by default).\r\n     * The flag impacts on the link's href:\r\n     * if the flag is tru then the href is constructed like #id=${filePath}&parent=${filePath.substring(0, filePath.lastIndexOf('/'))},\r\n     * otherwise the href will contain filePath only.\r\n     */\r\n    hasPreview?: boolean;\r\n    /**\r\n     * custom handler for link click. If not set link click will lead to rendering document preview\r\n     */\r\n    onClick?: (args: IFieldNameClickEventArgs) => void;\r\n    /**\r\n     * custom handler for link double click. If not set link will use OOTB behavior.\r\n     */\r\n    onDoubleClick?: (args: IFieldNameClickEventArgs) => void;\r\n}\r\n\r\n/**\r\n * For future\r\n */\r\nexport interface IFieldNameRendererState {\r\n\r\n}\r\n\r\n/**\r\n * Name click event arguments\r\n */\r\nexport interface IFieldNameClickEventArgs {\r\n    filePath?: string;\r\n}\r\n\r\n/**\r\n * Field Title Renderer.\r\n * Used for:\r\n *   - Title\r\n */\r\nexport class FieldNameRenderer extends React.Component<IFieldNameRendererProps, IFieldNameRendererState> {\r\n    private _button: HTMLButtonElement;\r\n\r\n    public constructor(props: IFieldNameRendererProps, state: IFieldNameRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldNameRenderer', {});\r\n\r\n        this.state = {};\r\n\r\n        this._onDoubleClick = this._onDoubleClick.bind(this);\r\n    }\r\n\r\n    @override\r\n    public componentDidMount() {\r\n        //\r\n        // small hack for double click.\r\n        // unfortunately, we can't use React onDoubleClick because React doesn't guaranty the sequence of handlers.\r\n        // And stopPropagation could not make effect.\r\n        //\r\n        if (this.props.onDoubleClick && this.props.isLink) {\r\n            const domNode = ReactDOM.findDOMNode(this);\r\n            this._button = domNode.querySelector('button');\r\n            this._button.addEventListener('dblclick', this._onDoubleClick, false);\r\n        }\r\n    }\r\n\r\n    @override\r\n    public componentWillUnmount() {\r\n        if (this._button) {\r\n            this._button.removeEventListener('dblclick', this._onDoubleClick);\r\n        }\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        const isLink: boolean = this.props.isLink;\r\n        //\r\n        // for now only signal for New documents is implemented\r\n        //\r\n        let signal: JSX.Element = this.props.isNew ? <span className={css(styles.signal, styles.newItem)}><Icon iconName={'Glimmer'} className={css(styles.newIcon)} /></span> : null;\r\n        let value: JSX.Element;\r\n\r\n        if (isLink) {\r\n            if (this.props.onClick) {\r\n                value = <Link\r\n                    onClick={this._onClick.bind(this)}\r\n                    style={this.props.cssProps}\r\n                    className={styles.value}>{this.props.text}</Link>;\r\n            }\r\n            else {\r\n                let url: string;\r\n                const filePath = this.props.filePath;\r\n                const parentPath = filePath.substring(0, filePath.lastIndexOf('/'));\r\n                if (this.props.hasPreview !== false) {\r\n                    url = `#id=${encodeURIComponent(filePath)}&parent=${encodeURIComponent(parentPath)}`;\r\n                }\r\n                else {\r\n                    url = filePath;\r\n                }\r\n\r\n                value = <Link href={url} style={this.props.cssProps} className={styles.value}>{this.props.text}</Link>;\r\n            }\r\n        }\r\n        else {\r\n            value = <FieldBaseTextRenderer cssProps={this.props.cssProps} text={this.props.text} />;\r\n        }\r\n\r\n        return <span className={css(styles.signalField, this.props.className)} style={this.props.cssProps}>\r\n            {signal}\r\n            <span className={styles.signalFieldValue}>\r\n                {value}\r\n            </span>\r\n        </span>;\r\n    }\r\n\r\n    private _onClick(e): boolean {\r\n        if (this.props.onClick) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            const args: IFieldNameClickEventArgs = this.props as IFieldNameClickEventArgs;\r\n            this.props.onClick(args);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private _onDoubleClick(e): boolean {\r\n        if (this.props.onDoubleClick) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            const args: IFieldNameClickEventArgs = this.props as IFieldNameClickEventArgs;\r\n            this.props.onDoubleClick(args);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}