{"version":3,"sources":["controls/fields/fieldTaxonomyRenderer/FieldTaxonomyRenderer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,6BAA+B;AAC/B,kEAA2D;AAI3D,qDAAuD;AAEvD,yFAAyD;AAgBzD;;;;GAIG;AACH;IAA2C,yCAAyE;IAChH,+BAAmB,KAAkC,EAAE,KAAkC;QAAzF,YACI,kBAAM,KAAK,EAAE,KAAK,CAAC,SAKtB;QAHG,SAAS,CAAC,KAAK,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QAE7C,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IACpB,CAAC;IAGM,sCAAM,GAAb;QADA,iBAWC;QATG,IAAI,OAAO,GAAgC,IAAI,CAAC;QAChD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI;gBAChC,MAAM,CAAC,6BAAK,SAAS,EAAE,2CAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ;oBAAE,kCAAO,IAAI,CAAC,KAAK,CAAQ,CAAM,CAAC;YACpG,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,GAAG,6BAAK,SAAS,EAAE,2CAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAAE,kCAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAQ,CAAM,CAAC;QACnH,CAAC;QACD,MAAM,CAAC,CAAC,6BAAK,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAG,OAAO,CAAO,CAAC,CAAC;IACpG,CAAC;IAVD;QADC,qBAAQ;uDAWR;IACL,4BAAC;CArBD,AAqBC,CArB0C,KAAK,CAAC,SAAS,GAqBzD;AArBY,sDAAqB","file":"controls/fields/fieldTaxonomyRenderer/FieldTaxonomyRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport { ITerm } from '../../../common/SPEntities';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport styles from './FieldTaxonomyRenderer.module.scss';\r\n\r\nexport interface IFieldTaxonomyRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * terms to display\r\n     */\r\n    terms: ITerm | ITerm[];\r\n}\r\n\r\n/**\r\n * For future\r\n */\r\nexport interface IFieldTaxonomyRendererState {\r\n\r\n}\r\n\r\n/**\r\n * Field Taxonomy Renderer.\r\n * Used for:\r\n *   - Taxonomy\r\n */\r\nexport class FieldTaxonomyRenderer extends React.Component<IFieldTaxonomyRendererProps, IFieldTaxonomyRendererState> {\r\n    public constructor(props: IFieldTaxonomyRendererProps, state: IFieldTaxonomyRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldTaxonomyRenderer', {});\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        let termEls: JSX.Element | JSX.Element[] = null;\r\n        if (Array.isArray(this.props.terms)) {\r\n            termEls = this.props.terms.map((term) => {\r\n                return <div className={styles.term} style={this.props.cssProps}><span>{term.Label}</span></div>;\r\n            });\r\n        } else {\r\n            termEls = <div className={styles.term} style={this.props.cssProps}><span>{this.props.terms.Label}</span></div>;\r\n        }\r\n        return (<div style={this.props.cssProps} className={css(this.props.className)}>{termEls}</div>);\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}