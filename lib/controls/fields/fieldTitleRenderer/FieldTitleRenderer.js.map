{"version":3,"sources":["controls/fields/fieldTitleRenderer/FieldTitleRenderer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,6BAA+B;AAC/B,kEAA2D;AAC3D,wDAAuD;AAEvD,wFAAuF;AAEvF,qDAAuD;AA4CvD;;;;GAIG;AACH;IAAwC,sCAAmE;IACvG,4BAAmB,KAA+B,EAAE,KAA+B;QAAnF,YACI,kBAAM,KAAK,EAAE,KAAK,CAAC,SAKtB;QAHG,SAAS,CAAC,KAAK,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IACpB,CAAC;IAGM,mCAAM,GAAb;QACI,IAAM,MAAM,GAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE1C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,CAAC,oBAAC,WAAI,IAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAQ,CAAC,CAAC;QACjJ,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,CAAC,oBAAC,6CAAqB,IAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI,CAAC,CAAC;QAC9H,CAAC;IACL,CAAC;IAEO,qCAAQ,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACrB,IAAM,IAAI,GAA8B,IAAI,CAAC,KAAkC,CAAC;YAChF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,CAAC;QACX,CAAC;QACD,IAAM,GAAG,GAAc,IAAI,CAAC,KAAK,CAAC,OAAO,qDAAgD,IAAI,CAAC,KAAK,CAAC,MAAM,YAAO,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC;QACjI,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IACxB,CAAC;IAnBD;QADC,qBAAQ;oDAUR;IAWL,yBAAC;CA9BD,AA8BC,CA9BuC,KAAK,CAAC,SAAS,GA8BtD;AA9BY,gDAAkB","file":"controls/fields/fieldTitleRenderer/FieldTitleRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\n\r\nimport { FieldBaseTextRenderer } from '../fieldBaseTextRenderer/FieldBaseTextRenderer';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nexport interface IFieldTitleRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * text to be displayed\r\n     */\r\n    text?: string;\r\n    /**\r\n     * true if the Title should be rendered as link\r\n     */\r\n    isLink?: boolean;\r\n    /**\r\n     * web url\r\n     */\r\n    baseUrl?: string;\r\n    /**\r\n     * list id\r\n     */\r\n    listId?: string;\r\n    /**\r\n     * item id\r\n     */\r\n    id?: number;\r\n    /**\r\n     * custom title click event handler. If not set Display form for the item will be displaed\r\n     */\r\n    onClick?: (args: IFieldTitleClickEventArgs) => void;\r\n}\r\n\r\n/**\r\n * For future\r\n */\r\nexport interface IFieldTitleRendererState {\r\n\r\n}\r\n\r\n/**\r\n * Title click event arguments\r\n */\r\nexport interface IFieldTitleClickEventArgs {\r\n    listId?: string;\r\n    id?: string;\r\n}\r\n\r\n/**\r\n * Field Title Renderer.\r\n * Used for:\r\n *   - Title\r\n */\r\nexport class FieldTitleRenderer extends React.Component<IFieldTitleRendererProps, IFieldTitleRendererState> {\r\n    public constructor(props: IFieldTitleRendererProps, state: IFieldTitleRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldTitleRenderer', {});\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        const isLink: boolean = this.props.isLink;\r\n\r\n        if (isLink) {\r\n            return (<Link onClick={this._onClick.bind(this)} className={css(this.props.className)} style={this.props.cssProps}>{this.props.text}</Link>);\r\n        }\r\n        else {\r\n            return (<FieldBaseTextRenderer className={this.props.className} cssProps={this.props.cssProps} text={this.props.text} />);\r\n        }\r\n    }\r\n\r\n    private _onClick(): void {\r\n        if (this.props.onClick) {\r\n            const args: IFieldTitleClickEventArgs = this.props as IFieldTitleClickEventArgs;\r\n            this.props.onClick(args);\r\n            return;\r\n        }\r\n        const url: string = `${this.props.baseUrl}/_layouts/15/listform.aspx?PageType=4&ListId=${this.props.listId}&ID=${this.props.id}`;\r\n        location.href = url;\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}