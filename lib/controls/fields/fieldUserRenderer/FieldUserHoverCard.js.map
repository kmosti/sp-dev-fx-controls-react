{"version":3,"sources":["controls/fields/fieldUserRenderer/FieldUserHoverCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,kEAAsF;AAEtF,iFAAqD;AAqBrD;;GAEG;AACH;IAAgD,sCAAmE;IAC/G,4BAAY,KAA+B;QAA3C,YACI,kBAAM,KAAK,CAAC,SAKf;QAHG,KAAI,CAAC,KAAK,GAAG;YACT,eAAe,EAAE,SAAS;SAC7B,CAAC;;IACN,CAAC;IAEM,mCAAM,GAAb;QAAA,iBAYC;QAXG,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,uCAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YACnD,8BAAM,GAAG,EAAE,UAAC,CAAiB,IAAK,OAAA,CAAC,KAAI,CAAC,KAAK,CAAC,eAAe,IAAI,KAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,CAAC,EAApE,CAAoE,uBAAqB,IAAI,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAQ;YAC/J,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,mBAAmB;gBAC5E,oBAAC,qBAAS,IACN,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EACjD,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAClC,gBAAgB,EAAE,CAAC,GACrB,CACJ,CACT,CAAC;IACN,CAAC;IACL,yBAAC;AAAD,CAtBA,AAsBC,CAtB+C,KAAK,CAAC,SAAS,GAsB9D","file":"controls/fields/fieldUserRenderer/FieldUserHoverCard.js","sourcesContent":["import * as React from 'react';\r\nimport { HoverCard, IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\n\r\nimport styles from './FieldUserRenderer.module.scss';\r\n\r\nexport interface IFieldUserHoverCardProps {\r\n    /**\r\n     * IExpandingCardProps\r\n     */\r\n    expandingCardProps: IExpandingCardProps;\r\n    /**\r\n     * User display name\r\n     */\r\n    displayName: string;\r\n    /**\r\n     * CSS styles to apply to the renderer\r\n     */\r\n    cssProps?: React.CSSProperties;\r\n}\r\n\r\nexport interface IFieldUserHoverCardState {\r\n    contentRendered?: HTMLDivElement;\r\n}\r\n\r\n/**\r\n * Component to render User name with related Hover Card\r\n */\r\nexport default class FieldUserHoverCard extends React.Component<IFieldUserHoverCardProps, IFieldUserHoverCardState> {\r\n    constructor(props: IFieldUserHoverCardProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contentRendered: undefined\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={styles.user} style={this.props.cssProps}>\r\n                <span ref={(c: HTMLDivElement) => !this.state.contentRendered && this.setState({ contentRendered: c })} data-is-focusable={true}>{this.props.displayName}</span>\r\n                {this.state.contentRendered && this.props.expandingCardProps.onRenderCompactCard &&\r\n                    <HoverCard\r\n                        expandingCardProps={this.props.expandingCardProps}\r\n                        target={this.state.contentRendered}\r\n                        cardDismissDelay={0}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}