{"version":3,"sources":["controls/fields/fieldUserRenderer/FieldUserRenderer.tsx"],"names":[],"mappings":"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","file":"controls/fields/fieldUserRenderer/FieldUserRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport * as _ from '@microsoft/sp-lodash-subset';\r\nimport { IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/common/DirectionalHint';\r\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\r\nimport { IconButton, Button, ButtonType } from 'office-ui-fabric-react/lib/Button';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { IPrincipal, IUserProfileProperties, IODataKeyValuePair } from '../../../common/SPEntities';\r\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\r\n\r\nimport styles from './FieldUserRenderer.module.scss';\r\nimport { IContext } from '../../../common/Interfaces';\r\nimport { GeneralHelper } from '../../../common/utilities/GeneralHelper';\r\nimport { SPHttpClient } from '@microsoft/sp-http';\r\nimport FieldUserHoverCard, { IFieldUserHoverCardProps } from './FieldUserHoverCard';\r\nimport * as telemetry from '../../../common/telemetry';\r\n\r\nimport * as strings from 'ControlStrings';\r\nimport { SPHelper } from '../../../common/utilities';\r\n\r\nexport interface IFieldUserRendererProps extends IFieldRendererProps {\r\n    /**\r\n     * users to be displayed\r\n     */\r\n    users?: IPrincipal[];\r\n    /**\r\n     * Customizer context\r\n     */\r\n    context: IContext;\r\n}\r\n\r\n/**\r\n * Internal interface to work with user profile\r\n */\r\nexport interface IFieldUser {\r\n    /**\r\n     * display  name\r\n     */\r\n    displayName?: string;\r\n    /**\r\n     * job title\r\n     */\r\n    jobTitle?: string;\r\n    /**\r\n     * department\r\n     */\r\n    department?: string;\r\n    /**\r\n     * user id\r\n     */\r\n    id?: string;\r\n    /**\r\n     * avatar url\r\n     */\r\n    imageUrl?: string;\r\n    /**\r\n     * email\r\n     */\r\n    email?: string;\r\n    /**\r\n     * skype for business username\r\n     */\r\n    sip?: string;\r\n    /**\r\n     * true if the user is current user\r\n     */\r\n    currentUser?: boolean;\r\n    /**\r\n     * work phone\r\n     */\r\n    workPhone?: string;\r\n    /**\r\n     * cell phone\r\n     */\r\n    cellPhone?: string;\r\n    /**\r\n     * url to edit user profile in Delve\r\n     */\r\n    userUrl?: string;\r\n}\r\n\r\nexport interface IFieldUserRendererState {\r\n    users?: IFieldUser[];\r\n}\r\n\r\n/**\r\n * Field User Renderer.\r\n * Used for:\r\n *   - People and Groups\r\n */\r\nexport class FieldUserRenderer extends React.Component<IFieldUserRendererProps, IFieldUserRendererState> {\r\n\r\n    // cached user profiles\r\n    private _loadedUserProfiles: { [id: string]: IUserProfileProperties } = {};\r\n    private _userUrlTemplate: string;\r\n    private _userImageUrl: string;\r\n\r\n\r\n    public constructor(props: IFieldUserRendererProps, state: IFieldUserRendererState) {\r\n        super(props, state);\r\n\r\n        telemetry.track('FieldUserRenderer', {});\r\n\r\n        this._userImageUrl = `${GeneralHelper.trimSlash(props.context.pageContext.web.absoluteUrl)}/_layouts/15/userphoto.aspx?size=L&accountname={0}`;\r\n\r\n        const users: IFieldUser[] = this.props.users ? this.props.users.map(user => {\r\n            return this._getUserFromPrincipalAndProps(user, {});\r\n        }) : [];\r\n\r\n        this.state = {\r\n            users: users\r\n        };\r\n    }\r\n\r\n    @override\r\n    public render(): JSX.Element {\r\n        const userEls: JSX.Element[] = this.state.users.map((user, index) => {\r\n            const expandingCardProps: IExpandingCardProps = {\r\n                onRenderCompactCard: (user.email ? this._onRenderCompactCard.bind(this, index) : null),\r\n                onRenderExpandedCard: (user.email ? this._onRenderExpandedCard.bind(this) : null),\r\n                renderData: user,\r\n                directionalHint: DirectionalHint.bottomLeftEdge,\r\n                gapSpace: 1,\r\n                expandedCardHeight: 150\r\n            };\r\n            const hoverCardProps: IFieldUserHoverCardProps = {\r\n                expandingCardProps: expandingCardProps,\r\n                displayName: user.displayName,\r\n                cssProps: this.props.cssProps\r\n            };\r\n            return <FieldUserHoverCard {...hoverCardProps} />;\r\n        });\r\n        return <div style={this.props.cssProps} className={css(this.props.className)}>{userEls}</div>;\r\n    }\r\n\r\n    /**\r\n     * Renders compact part of user Hover Card\r\n     * @param index user index in the list of users/groups in the People and Group field value\r\n     * @param user IUser\r\n     */\r\n    private _onRenderCompactCard(index: number, user: IFieldUser): JSX.Element {\r\n        this._requestUserProfile(user, index);\r\n        const sip: string = user.sip || user.email;\r\n        let actionsEl: JSX.Element;\r\n        if (user.currentUser) {\r\n            actionsEl = <div className={styles.actions}>\r\n                <Button buttonType={ButtonType.command} iconProps={{ iconName: 'Edit' }} href={user.userUrl} target={'_blank'}>{strings.UpdateProfile}</Button>\r\n            </div>;\r\n        }\r\n        else {\r\n            actionsEl = <div className={styles.actions}>\r\n                <IconButton iconProps={{ iconName: 'Mail' }} title={strings.SendEmailTo.replace('{0}', user.email)} href={`mailto:${user.email}`} />\r\n                <IconButton iconProps={{ iconName: 'Chat' }} title={strings.StartChatWith.replace('{0}', sip)} href={`sip:${sip}`} className={styles.chat} />\r\n            </div>;\r\n        }\r\n\r\n        return <div className={styles.main}>\r\n            <Persona\r\n                imageUrl={user.imageUrl}\r\n                primaryText={user.displayName}\r\n                secondaryText={user.department}\r\n                tertiaryText={user.jobTitle}\r\n                size={PersonaSize.large} />\r\n            {actionsEl}\r\n        </div>;\r\n    }\r\n\r\n    /**\r\n     * Renders expanded part of user Hover Card\r\n     * @param user IUser\r\n     */\r\n    private _onRenderExpandedCard(user: IFieldUser): JSX.Element {\r\n        if (this._loadedUserProfiles[user.id]) {\r\n            return <ul className={styles.sections}>\r\n                <li className={styles.section}>\r\n                    <div className={styles.header}>{strings.Contact} <Icon iconName=\"ChevronRight\" className={styles.chevron} /></div>\r\n                    <div className={styles.contactItem}>\r\n                        <Icon iconName={'Mail'} />\r\n                        <Link className={styles.content} title={user.email} href={`mailto:${user.email}`} target={'_self'}>{user.email}</Link>\r\n                    </div>\r\n                    {user.workPhone &&\r\n                        <div className={styles.contactItem}>\r\n                            <Icon iconName={'Phone'} />\r\n                            <Link className={styles.content} title={user.workPhone} href={`tel:${user.workPhone}`} target={'_self'}>{user.workPhone}</Link>\r\n                        </div>\r\n                    }\r\n                    {user.cellPhone &&\r\n                        <div className={styles.contactItem}>\r\n                            <Icon iconName={'Phone'} />\r\n                            <Link className={styles.content} title={user.cellPhone} href={`tel:${user.cellPhone}`} target={'_self'}>{user.cellPhone}</Link>\r\n                        </div>\r\n                    }\r\n                </li>\r\n            </ul>;\r\n        }\r\n        else {\r\n            return <Spinner size={SpinnerSize.large} />;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Merges data from IPrincipal object and IUserProfileProperties object to IUser object\r\n     * @param principal IPrincipal\r\n     * @param userProfileProperties IUserProfileProperties\r\n     */\r\n    private _getUserFromPrincipalAndProps(principal: IPrincipal, userProfileProperties: IUserProfileProperties): IFieldUser {\r\n        let imageUrl: string = userProfileProperties.pictureUrl || principal.picture;\r\n        const mthumbStr = 'MThumb.jpg';\r\n        if (imageUrl && imageUrl.indexOf(mthumbStr) === imageUrl.length - mthumbStr.length) {\r\n            imageUrl = '';\r\n        }\r\n        return {\r\n            displayName: userProfileProperties.displayName || principal.title,\r\n            jobTitle: userProfileProperties.jobTitle || principal.jobTitle,\r\n            department: userProfileProperties.department || principal.department,\r\n            id: principal.id,\r\n            imageUrl: imageUrl ? this._userImageUrl.replace('{0}', principal.email) : imageUrl,\r\n            email: userProfileProperties.email || principal.email,\r\n            sip: userProfileProperties.sip || principal.sip,\r\n            workPhone: userProfileProperties.workPhone,\r\n            cellPhone: userProfileProperties.cellPhone,\r\n            userUrl: this._getUserUrlTemplate().replace('{0}', principal.email), //userProfileProperties.userUrl\r\n            currentUser: principal.id == this.props.context.pageContext.legacyPageContext.userId\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the template of url for editing user profile in Delve\r\n     */\r\n    private _getUserUrlTemplate(): string {\r\n        if (!this._userUrlTemplate) {\r\n            this._userUrlTemplate = `${location.protocol}//${location.hostname.split('.sharepoint.com')[0]}-my.sharepoint.com/person.aspx?user={0}&v=editprofile`;\r\n        }\r\n\r\n        return this._userUrlTemplate;\r\n    }\r\n\r\n    /**\r\n     * Requests User Profile Properties\r\n     */\r\n    private async _requestUserProfile(user: IFieldUser, index: number): Promise<void> {\r\n        if (this._loadedUserProfiles[user.id]) {\r\n            return; // we've already have the profile info\r\n        }\r\n\r\n        const context: IContext = this.props.context;\r\n\r\n        const siteUser = await SPHelper.getUserById(parseInt(user.id), context);\r\n\r\n        const value = await SPHelper.getUserProperties(siteUser.LoginName, context);\r\n\r\n        const mthumbStr = 'MThumb.jpg';\r\n        const userProfileProps: IUserProfileProperties = {\r\n            displayName: value.DisplayName,\r\n            email: value.Email,\r\n            jobTitle: value.Title,\r\n            userUrl: value.UserUrl,\r\n            pictureUrl: value.PictureUrl && value.PictureUrl.toString().indexOf(mthumbStr) === value.PictureUrl.toString().length - mthumbStr.length ? '' : value.PictureUrl //this._userImageUrl.replace('{0}', user.email)\r\n        };\r\n\r\n        const props: IODataKeyValuePair[] = value.UserProfileProperties as IODataKeyValuePair[];\r\n        let foundPropsCount: number = 0;\r\n        for (let i = 0, len = props.length; i < len; i++) {\r\n            const prop: IODataKeyValuePair = props[i];\r\n            switch (prop.Key) {\r\n                case 'WorkPhone':\r\n                    userProfileProps.workPhone = prop.Value;\r\n                    foundPropsCount++;\r\n                    break;\r\n                case 'Department':\r\n                    userProfileProps.department = prop.Value;\r\n                    foundPropsCount++;\r\n                    break;\r\n                case 'SPS-SipAddress':\r\n                    userProfileProps.sip = prop.Value;\r\n                    foundPropsCount++;\r\n                    break;\r\n                case 'CellPhone':\r\n                    userProfileProps.cellPhone = prop.Value;\r\n                    foundPropsCount++;\r\n                    break;\r\n            }\r\n\r\n            if (foundPropsCount === 4) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._loadedUserProfiles[user.id] = userProfileProps;\r\n        this.setState((prevState: IFieldUserRendererState, componentProps: IFieldUserRendererProps) => {\r\n            const newUsers = _.clone<IFieldUser[]>(prevState.users);\r\n            newUsers[index] = this._getUserFromPrincipalAndProps(this.props.users[index], userProfileProps);\r\n\r\n            return { users: newUsers };\r\n\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}