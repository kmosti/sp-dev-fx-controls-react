{"version":3,"sources":["controls/filePicker/FilePicker.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/FilePicker.js","sourcesContent":["import * as React from 'react';\r\nimport { IFilePickerProps } from './IFilePickerProps';\r\nimport { IFilePickerState } from './IFilePickerState';\r\n\r\nimport { PrimaryButton, ActionButton  } from 'office-ui-fabric-react/lib/components/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/components/Panel';\r\nimport { Label } from 'office-ui-fabric-react/lib/components/Label';\r\nimport { Nav, INavLink, INavLinkGroup } from 'office-ui-fabric-react/lib/Nav';\r\nimport { css } from \"@uifabric/utilities/lib/css\";\r\n\r\n// Localization\r\nimport * as strings from 'ControlStrings';\r\n\r\nimport LinkFilePickerTab from './LinkFilePickerTab/LinkFilePickerTab';\r\nimport UploadFilePickerTab from './UploadFilePickerTab/UploadFilePickerTab';\r\nimport SiteFilePickerTab from './SiteFilePickerTab/SiteFilePickerTab';\r\nimport WebSearchTab from './WebSearchTab/WebSearchTab';\r\nimport RecentFilesTab from './RecentFilesTab/RecentFilesTab';\r\n\r\nimport styles from './FilePicker.module.scss';\r\nimport { FileBrowserService } from '../../services/FileBrowserService';\r\nimport { OneDriveFilesTab } from './OneDriveFilesTab';\r\nimport { OneDriveService } from '../../services/OneDriveService';\r\nimport { OrgAssetsService } from '../../services/OrgAssetsService';\r\nimport { IFilePickerResult } from './FilePicker.types';\r\nimport { FilesSearchService } from '../../services/FilesSearchService';\r\n\r\nimport * as telemetry from '../../common/telemetry';\r\n\r\nexport class FilePicker extends React.Component<IFilePickerProps, IFilePickerState> {\r\n  private fileBrowserService: FileBrowserService;\r\n  private oneDriveService: OneDriveService;\r\n  private orgAssetsService: OrgAssetsService;\r\n  private fileSearchService: FilesSearchService;\r\n\r\n  constructor(props: IFilePickerProps) {\r\n    super(props);\r\n\r\n    telemetry.track('ReactFilePicker', {});\r\n\r\n    // Initialize file browser services\r\n    this.fileBrowserService = new FileBrowserService(props.context, this.props.itemsCountQueryLimit);\r\n    this.oneDriveService = new OneDriveService(props.context, this.props.itemsCountQueryLimit);\r\n    this.orgAssetsService = new OrgAssetsService(props.context, this.props.itemsCountQueryLimit);\r\n    this.fileSearchService = new FilesSearchService(props.context, this.props.bingAPIKey);\r\n\r\n    this.state = {\r\n      panelOpen: false,\r\n      selectedTab: 'keyRecent',\r\n      organisationAssetsEnabled: false,\r\n      showFullNav: true\r\n    };\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    // Load information about Organisation Assets Library\r\n    const orgAssetsLibraries = await this.orgAssetsService.getSiteMediaLibraries();\r\n    const organisationAssetsEnabled = orgAssetsLibraries ? true : false;\r\n\r\n    this.setState({\r\n      organisationAssetsEnabled\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    // If no acceptable file type was passed, and we're expecting images, set the default image filter\r\n    const accepts: string[] = this.props.accepts;\r\n\r\n    const linkTabProps = {\r\n      accepts: accepts,\r\n      context: this.props.context,\r\n      onClose: () => this._handleClosePanel(),\r\n      onSave: (value: IFilePickerResult) => { this._handleSave(value); }\r\n    };\r\n    const buttonProps = {\r\n      text: this.props.buttonLabel,\r\n      disabled: this.props.disabled,\r\n      onClick: this._handleOpenPanel\r\n    };\r\n\r\n    return (\r\n      <div >\r\n        {\r\n          this.props.label && <Label required={this.props.required}>{this.props.label}</Label>\r\n        }\r\n        {\r\n          this.props.buttonIcon ?\r\n            <ActionButton iconProps={{ iconName: this.props.buttonIcon }} {...buttonProps} /> :\r\n            <PrimaryButton {...buttonProps}/>\r\n        }\r\n\r\n        <Panel isOpen={this.state.panelOpen}\r\n          isBlocking={true}\r\n          hasCloseButton={true}\r\n          className={styles.filePicker}\r\n          onDismiss={this._handleClosePanel}\r\n          type={PanelType.extraLarge}\r\n          isFooterAtBottom={true}\r\n          onRenderNavigation={() => { return undefined; }}\r\n          headerText={strings.FilePickerHeader}\r\n          isLightDismiss={true}\r\n          onRenderHeader={() => this._renderHeader()}\r\n        >\r\n\r\n          <div className={styles.nav}>\r\n            <Nav\r\n              groups={this._getNavPanelOptions()}\r\n              selectedKey={this.state.selectedTab}\r\n              onLinkClick={(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => this._handleLinkClick(ev, item)}\r\n            />\r\n          </div>\r\n          <div className={styles.tabsContainer}>\r\n            {\r\n              this.state.selectedTab === \"keyLink\" &&\r\n              <LinkFilePickerTab\r\n                fileSearchService={this.fileSearchService}\r\n                allowExternalTenantLinks={true}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keyUpload\" &&\r\n              <UploadFilePickerTab\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keySite\" &&\r\n              <SiteFilePickerTab\r\n                fileBrowserService={this.fileBrowserService}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keyOrgAssets\" &&\r\n              <SiteFilePickerTab\r\n                breadcrumbFirstNode={{\r\n                  isCurrentItem: true,\r\n                  text: strings.OrgAssetsTabLabel,\r\n                  key: \"keyOrgAssets\"\r\n                }}\r\n                fileBrowserService={this.orgAssetsService}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keyWeb\" &&\r\n              <WebSearchTab\r\n                bingSearchService={this.fileSearchService}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keyOneDrive\" &&\r\n              <OneDriveFilesTab\r\n                oneDriveService={this.oneDriveService}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n            {\r\n              this.state.selectedTab === \"keyRecent\" &&\r\n              <RecentFilesTab\r\n                fileSearchService={this.fileSearchService}\r\n                {...linkTabProps}\r\n              />\r\n            }\r\n\r\n          </div>\r\n        </Panel>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the panel header\r\n   */\r\n  private _renderHeader = (): JSX.Element => {\r\n    return <div className={\"ms-Panel-header\"}><p className={css(\"ms-Panel-headerText\", styles.header)} role=\"heading\">{strings.FilePickerHeader}</p></div>;\r\n  }\r\n\r\n  /**\r\n   * Open the panel\r\n   */\r\n  private _handleOpenPanel = () => {\r\n    this.setState({\r\n      panelOpen: true,\r\n      selectedTab: 'keyRecent'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the panel\r\n   */\r\n  private _handleClosePanel = () => {\r\n    this.setState({\r\n      panelOpen: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On save action\r\n   */\r\n  private _handleSave = (filePickerResult: IFilePickerResult) => {\r\n    this.props.onSave(filePickerResult);\r\n    this.setState({\r\n      panelOpen: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Changes the selected tab when a link is selected\r\n   */\r\n  private _handleLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\r\n    this.setState({ selectedTab: item.key });\r\n  }\r\n\r\n  /**\r\n   * Prepares navigation panel options\r\n   */\r\n  private _getNavPanelOptions = () => {\r\n    let links = [];\r\n\r\n    if (!this.props.hideRecentTab) {\r\n      links.push({\r\n        name: strings.RecentLinkLabel,\r\n        url: '#recent',\r\n        icon: 'Recent',\r\n        key: 'keyRecent',\r\n      });\r\n    }\r\n    if (this.props.bingAPIKey && !this.props.hideWebSearchTab) {\r\n      links.push({\r\n        name: strings.WebSearchLinkLabel,\r\n        url: '#search',\r\n        key: 'keyWeb',\r\n        icon: 'Search',\r\n      });\r\n    }\r\n    if (!this.props.hideOrganisationalAssetTab && this.state.organisationAssetsEnabled) {\r\n      links.push({\r\n        name: 'Your organisation',\r\n        url: '#orgAssets',\r\n        icon: 'FabricFolderConfirm',\r\n        key: 'keyOrgAssets',\r\n      });\r\n    }\r\n    if (!this.props.hideOneDriveTab) {\r\n      links.push({\r\n        name: \"OneDrive\",\r\n        url: '#onedrive',\r\n        key: 'keyOneDrive',\r\n        icon: 'OneDrive',\r\n      });\r\n    }\r\n    if (!this.props.hideSiteFilesTab) {\r\n      links.push({\r\n        name: strings.SiteLinkLabel,\r\n        url: '#globe',\r\n        key: 'keySite',\r\n        icon: 'Globe',\r\n      });\r\n    }\r\n    if (!this.props.hideLocalUploadTab) {\r\n      links.push({\r\n        name: strings.UploadLinkLabel,\r\n        url: '#upload',\r\n        key: 'keyUpload',\r\n        icon: 'System'\r\n      });\r\n    }\r\n    if (!this.props.hideLinkUploadTab) {\r\n      links.push({\r\n        name: strings.FromLinkLinkLabel,\r\n        url: '#link',\r\n        key: 'keyLink',\r\n        icon: 'Link'\r\n      });\r\n    }\r\n\r\n    let groups: INavLinkGroup[] = [ { links} ];\r\n    return groups;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}