{"version":3,"sources":["controls/filePicker/LinkFilePickerTab/LinkFilePickerTab.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/LinkFilePickerTab/LinkFilePickerTab.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport { ILinkFilePickerTabProps, ILinkFilePickerTabState } from '.';\r\nimport { GeneralHelper } from '../../../Utilities';\r\nimport { IFilePickerResult } from '../FilePicker.types';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\n\r\nimport * as strings from 'ControlStrings';\r\nimport styles from './LinkFilePickerTab.module.scss';\r\n\r\n\r\nexport default class LinkFilePickerTab extends React.Component<ILinkFilePickerTabProps, ILinkFilePickerTabState> {\r\n  constructor(props: ILinkFilePickerTabProps) {\r\n    super(props);\r\n    this.state = { isValid: false };\r\n  }\r\n\r\n  public render(): React.ReactElement<ILinkFilePickerTabProps> {\r\n    const fileUrl = this.state.filePickerResult ? this.state.filePickerResult.fileAbsoluteUrl : null;\r\n    return (\r\n      <div className={styles.tabContainer}>\r\n        <div className={styles.tabHeaderContainer}>\r\n          <h2 className={styles.tabHeader}>{strings.LinkHeader}</h2>\r\n        </div>\r\n        <div className={styles.tab}>\r\n          <TextField\r\n            multiline={true}\r\n            required={true}\r\n            resizable={false}\r\n            deferredValidationTime={300}\r\n            className={styles.linkTextField}\r\n            label={strings.LinkFileInstructions}\r\n            ariaLabel={strings.LinkFileInstructions}\r\n            defaultValue={\"https://\"}\r\n            onGetErrorMessage={(value: string) => this._getErrorMessagePromise(value)}\r\n            autoAdjustHeight={false}\r\n            underlined={false}\r\n            borderless={false}\r\n            validateOnFocusIn={false}\r\n            validateOnFocusOut={false}\r\n            validateOnLoad={true}\r\n            value={fileUrl}\r\n            onChanged={(newValue: string) => this._handleChange(newValue)}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.actionButtonsContainer}>\r\n          <div className={styles.actionButtons}>\r\n            <PrimaryButton\r\n              disabled={!this.state.isValid}\r\n              onClick={() => this._handleSave()} className={styles.actionButton}>{strings.OpenButtonLabel}</PrimaryButton>\r\n            <DefaultButton onClick={() => this._handleClose()} className={styles.actionButton}>{strings.CancelButtonLabel}</DefaultButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Called as user types in a new value\r\n   */\r\n  private _handleChange = (fileUrl: string) => {\r\n    const filePickerResult: IFilePickerResult = fileUrl && this._isUrl(fileUrl) ? {\r\n      fileAbsoluteUrl: fileUrl,\r\n      fileName: GeneralHelper.getFileNameFromUrl(fileUrl),\r\n      fileNameWithoutExtension: GeneralHelper.getFileNameWithoutExtension(fileUrl),\r\n      downloadFileContent: () => { return this.props.fileSearchService.downloadBingContent(fileUrl, GeneralHelper.getFileNameFromUrl(fileUrl)); }\r\n    } : null;\r\n    this.setState({\r\n      filePickerResult\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Verifies the url that was typed in\r\n   * @param value\r\n   */\r\n  private _getErrorMessagePromise = async (value: string): Promise<string> => {\r\n    // DOn't give an error for blank or placeholder value, but don't make it a valid entry either\r\n    if (value === undefined || value === 'https://') {\r\n      this.setState({ isValid: false });\r\n      return '';\r\n    }\r\n\r\n    // Make sure that user is typing a valid URL format\r\n    if (!this._isUrl(value)) {\r\n      this.setState({ isValid: false });\r\n      return '';\r\n    }\r\n\r\n    // If we don't allow external links, verify that we're in the same domain\r\n    if (!this.props.allowExternalTenantLinks && !this._isSameDomain(value)) {\r\n      this.setState({ isValid: false });\r\n      return strings.NoExternalLinksValidationMessage;\r\n    }\r\n\r\n    const fileExists = await this.props.fileSearchService.checkFileExists(value);\r\n    this.setState({ isValid: fileExists });\r\n\r\n    const strResult = fileExists ? '' : strings.ProvidedValueIsInvalid;\r\n    return strResult;\r\n  }\r\n\r\n  /**\r\n   * Handles when user saves\r\n   */\r\n  private _handleSave = () => {\r\n    this.props.onSave(this.state.filePickerResult);\r\n  }\r\n\r\n  /**\r\n   * HAndles when user closes without saving\r\n   */\r\n  private _handleClose = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  /**\r\n   * Is this a URL ?\r\n   * (insert guy holding a butterfly meme)\r\n   */\r\n  private _isUrl = (fileUrl: string): boolean => {\r\n    try {\r\n      const myURL = new URL(fileUrl.toLowerCase());\r\n      return myURL.host !== undefined;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private _isSameDomain = (fileUrl: string): boolean => {\r\n    const siteUrl: string = this.props.context.pageContext.web.absoluteUrl;\r\n    return GeneralHelper.getAbsoluteDomainUrl(siteUrl) === GeneralHelper.getAbsoluteDomainUrl(fileUrl);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}