{"version":3,"sources":["controls/filePicker/WebSearchTab/WebSearchTab.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/WebSearchTab/WebSearchTab.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport { IWebSearchTabProps, IWebSearchTabState, ISearchSuggestion, ImageSize, ImageAspect, ImageLicense, DEFAULT_SUGGESTIONS, MAX_ROW_HEIGHT, ROWS_PER_PAGE } from '.';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { Check } from 'office-ui-fabric-react/lib/Check';\r\nimport { Dropdown, IDropdownProps, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { IRectangle } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Selection, SelectionMode, SelectionZone } from 'office-ui-fabric-react/lib/Selection';\r\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\r\nimport { css } from '@uifabric/utilities/lib/css';\r\nimport { IFilePickerResult } from '../FilePicker.types';\r\nimport { GeneralHelper } from '../../../common/utilities';\r\nimport { ISearchResult, BingQuerySearchParams } from '../../../services/FilesSearchService.types';\r\n\r\nimport styles from './WebSearchTab.module.scss';\r\nimport * as strings from 'ControlStrings';\r\n\r\n/**\r\n * Renders search suggestions and performs seach queries\r\n */\r\nexport default class WebSearchTab extends React.Component<IWebSearchTabProps, IWebSearchTabState> {\r\n  private _columnCount: number;\r\n  private _columnWidth: number;\r\n  private _rowHeight: number;\r\n  private _selection: Selection;\r\n  private _listElem: List = undefined;\r\n\r\n  constructor(props: IWebSearchTabProps) {\r\n    super(props);\r\n\r\n    this._selection = new Selection({\r\n      selectionMode: SelectionMode.single,\r\n      onSelectionChanged: this._onSelectionChanged\r\n    });\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      results: undefined,\r\n      filePickerResult: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Render the tab\r\n   */\r\n  public render(): React.ReactElement<IWebSearchTabProps> {\r\n    const { query, results } = this.state;\r\n\r\n    return (\r\n      <div className={styles.tabContainer}>\r\n        <div className={styles.tabHeaderContainer}>\r\n          <Link onClick={this._clearSearch}>\r\n            <h2 className={styles.tabHeader}>{strings.WebSearchLinkLabel}</h2>\r\n          </Link>\r\n          {this.props.bingSearchService && this._renderSearchBox()}\r\n        </div>\r\n        <div className={styles.tab}>\r\n          { !query && this._renderSearchSuggestions() }\r\n          { query && results && this._renderSearchResults() }\r\n        </div>\r\n        <div className={styles.actionButtonsContainer}>\r\n          {\r\n            this.state.results && this.state.license === 'Any' &&\r\n            <MessageBar>\r\n              {strings.CreativeCommonsMessage}\r\n            </MessageBar>}\r\n          <Label className={styles.copyrightLabel}>\r\n            {strings.CopyrightWarning}&nbsp;&nbsp;\r\n            <Link target='_blank' href={strings.CopyrightUrl}>{strings.LearnMoreLink}</Link>\r\n          </Label>\r\n\r\n          <div className={styles.actionButtons}>\r\n            <PrimaryButton\r\n              disabled={!this.state.filePickerResult}\r\n              className={styles.actionButton}\r\n              onClick={() => this._handleSave()}\r\n            >{strings.OpenButtonLabel}</PrimaryButton>\r\n            <DefaultButton onClick={() => this._handleClose()} className={styles.actionButton}>{strings.CancelButtonLabel}</DefaultButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSelectionChanged = () => {\r\n    // Get the selected item\r\n    const selectedItems = this._selection.getSelection();\r\n    const filePickerResult = this.state.filePickerResult;\r\n\r\n    let selectedFileResult: IFilePickerResult = null;\r\n    if (selectedItems && selectedItems.length > 0) {\r\n      //Get the selected key\r\n      const selectedItem: ISearchResult = selectedItems[0] as ISearchResult;\r\n\r\n      //Brute force approach to making sure all URLs are loading over HTTPS\r\n      // even if it breaks the page.\r\n      const selectedUrl: string = selectedItem.contentUrl.replace('http://', 'https://');\r\n      selectedFileResult = {\r\n        fileAbsoluteUrl: selectedUrl,\r\n        fileName: GeneralHelper.getFileNameFromUrl(selectedUrl),\r\n        fileNameWithoutExtension: GeneralHelper.getFileNameWithoutExtension(selectedUrl),\r\n        downloadFileContent: () => { return this.props.bingSearchService.downloadBingContent(selectedUrl, GeneralHelper.getFileNameFromUrl(selectedUrl)); }\r\n      };\r\n    }\r\n\r\n    // If clicked on already selected file -> deselect it\r\n    if (filePickerResult && selectedFileResult && filePickerResult.fileAbsoluteUrl === selectedFileResult.fileAbsoluteUrl) {\r\n      this._selection.setAllSelected(false);\r\n      selectedFileResult = null;\r\n    }\r\n\r\n    // Save the selected file\r\n    this.setState({\r\n      filePickerResult: selectedFileResult\r\n    });\r\n    if (this._listElem) {\r\n      // Force the list to update to show the selection check\r\n      this._listElem.forceUpdate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets state of the control to the default one\r\n   */\r\n  private _clearSearch = () => {\r\n    this.setState({\r\n      query: undefined,\r\n      results: undefined,\r\n      filePickerResult: undefined\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Renders the returned search results\r\n   */\r\n  private _renderSearchResults = (): JSX.Element => {\r\n    const { results } = this.state;\r\n\r\n    // If there are no results, tell 'em.\r\n    if (results === undefined || results.length < 1) {\r\n      return <Label className={styles.noResultLabel}>{strings.NoResultsBadEnglish}</Label>;\r\n    }\r\n\r\n    return (\r\n      <FocusZone>\r\n        <SelectionZone selection={this._selection}\r\n          onItemInvoked={(item: ISearchResult) => this._selection.setKeySelected(item.key, true, true)}\r\n        >\r\n          <List\r\n            ref={this._linkElement}\r\n            className={styles.bingGrildList}\r\n            items={this.state.results}\r\n            getItemCountForPage={this._getItemCountForPage}\r\n            getPageHeight={this._getPageHeight}\r\n            renderedWindowsAhead={4}\r\n            onRenderCell={this._onRenderSearchResultsCell}\r\n          />\r\n        </SelectionZone>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Show an individual search result item\r\n   */\r\n  private _onRenderSearchResultsCell = (item: ISearchResult, index: number | undefined): JSX.Element => {\r\n    const { query } = this.state;\r\n\r\n    let isSelected: boolean = false;\r\n\r\n    if (this._selection && index !== undefined) {\r\n      isSelected = this._selection.isIndexSelected(index);\r\n    }\r\n\r\n    // The logic for calculating the thumbnail dimensions is not quite the same as the out-of-the-box file picker,\r\n    // but it'll have to do.\r\n\r\n    // Find the aspect ratio of the picture\r\n    const ratio: number = item.width / item.height;\r\n\r\n    // Fit the height to the desired row height\r\n    let thumbnailHeight: number = Math.min(this._rowHeight, item.height);\r\n\r\n    // Resize the picture with the same aspect ratio\r\n    let thumbnailWidth: number = thumbnailHeight * ratio;\r\n\r\n    const searchResultAltText: string = strings.SearchResultAlt.replace('{0}', query);\r\n    return (\r\n      <div\r\n        className={styles.bingGridListCell}\r\n        style={{\r\n          width: 100 / this._columnCount + '%'\r\n        }}\r\n      >\r\n        <div\r\n          aria-label={searchResultAltText}\r\n          className={css(styles.bingTile, isSelected ? styles.isSelected : undefined)}\r\n          data-is-focusable={true}\r\n          data-selection-index={index}\r\n          style={{\r\n            width: `${thumbnailWidth}px`,\r\n            height: `${thumbnailHeight}px`\r\n          }}>\r\n          <div className={styles.bingTileContent} data-selection-invoke={true}>\r\n            <Image src={item.thumbnailUrl} className={styles.bingTileThumbnail} alt={searchResultAltText} width={thumbnailWidth} height={thumbnailHeight} />\r\n            <div className={styles.bingTileFrame}></div>\r\n            <div className={styles.bingTileCheckCircle}\r\n              role='checkbox'\r\n              aria-checked={isSelected}\r\n              data-item-index={index} data-selection-toggle={true} data-automationid='CheckCircle'>\r\n              <Check checked={isSelected} />\r\n            </div>\r\n            <div className={styles.bingTileNamePlate}>\r\n              <Link\r\n                href={item.contentUrl}\r\n                target='_blank'\r\n                aria-label={strings.SearchResultAriaLabel}\r\n              >{item.displayUrl}</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n  }\r\n\r\n  /**\r\n   * Renders suggestions when there aren't any queries\r\n   */\r\n  private _renderSearchSuggestions = (): JSX.Element => {\r\n    const suggestions: ISearchSuggestion[] = this.props.suggestions !== undefined ? this.props.suggestions : DEFAULT_SUGGESTIONS;\r\n\r\n    return (\r\n      <FocusZone>\r\n        <List\r\n          className={styles.filePickerFolderCardGrid}\r\n          items={suggestions}\r\n          getItemCountForPage={this._getItemCountForPage}\r\n          getPageHeight={this._getPageHeight}\r\n          renderedWindowsAhead={4}\r\n          onRenderCell={this._onRenderSuggestionCell}\r\n        />\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets search results from Bing\r\n   */\r\n  private _getSearchResults = async () => {\r\n    // Do nothing\r\n    if (this.state.query === undefined || !this.props.bingSearchService) {\r\n      return;\r\n    }\r\n\r\n    // Show a loading indicator + remove selection\r\n    this.setState({\r\n      filePickerResult: null,\r\n      isLoading: true\r\n    });\r\n\r\n    const searchParams: BingQuerySearchParams = {\r\n      aspect: this.state.aspect,\r\n      size: this.state.size,\r\n      license: this.state.license,\r\n      query: this.state.query\r\n    };\r\n    const searchResults = await this.props.bingSearchService.executeBingSearch(searchParams);\r\n\r\n    // If the results were obtained\r\n    if (searchResults) {\r\n      // Set the items so that the selection zone can keep track of them\r\n      this._selection.setItems(searchResults, true);\r\n    }\r\n\r\n    // Save results and stop loading indicator\r\n    this.setState({\r\n      isLoading: false,\r\n      results: searchResults\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculates how many items there should be in the page\r\n   */\r\n  private _getItemCountForPage = (itemIndex: number, surfaceRect: IRectangle): number => {\r\n    if (itemIndex === 0) {\r\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\r\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\r\n      this._rowHeight = this._columnWidth;\r\n    }\r\n\r\n    return this._columnCount * ROWS_PER_PAGE;\r\n  }\r\n\r\n  /**\r\n   * Gets the height of a list \"page\"\r\n   */\r\n  private _getPageHeight = (): number => {\r\n    return this._rowHeight * ROWS_PER_PAGE;\r\n  }\r\n\r\n  /**\r\n   * Renders a cell for search suggestions\r\n   */\r\n  private _onRenderSuggestionCell = (item: ISearchSuggestion, index: number | undefined): JSX.Element => {\r\n    return (\r\n      <div\r\n        className={styles.filePickerFolderCardTile}\r\n        data-is-focusable={true}\r\n        style={{\r\n          width: 100 / this._columnCount + '%'\r\n        }}\r\n      >\r\n        <div className={styles.filePickerFolderCardSizer}>\r\n          <div className={styles.filePickerFolderCardPadder}>\r\n            <Image src={item.backgroundUrl} className={styles.filePickerFolderCardImage} imageFit={ImageFit.cover} />\r\n            <DefaultButton className={styles.filePickerFolderCardLabel} onClick={(_event) => this._handleSearch(item.topic)}>{item.topic}</DefaultButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the search box\r\n   */\r\n  private _renderSearchBox = (): JSX.Element => {\r\n    const { query } = this.state;\r\n    const hasQuery: boolean = query !== undefined;\r\n    const license: string = this.state.license ? this.state.license : 'All';\r\n\r\n    return (\r\n      <div className={styles.searchBoxContainer}>\r\n        <div className={styles.searchBoxMedium}>\r\n          <div className={styles.searchBox}>\r\n            <SearchBox\r\n              placeholder={strings.SearchBoxPlaceholder}\r\n              value={query}\r\n              onSearch={newQuery => this._handleSearch(newQuery)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Label>{strings.PoweredByBing}</Label>\r\n        {\r\n          hasQuery &&\r\n          <div className={styles.dropdownContainer}>\r\n            <Dropdown\r\n              className={styles.filterDropdown}\r\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\r\n              selectedKey={this.state.size}\r\n              options={[\r\n                { key: 'All', text: strings.SizeOptionAll },\r\n                { key: 'Small', text: strings.SizeOptionSmall },\r\n                { key: 'Medium', text: strings.SizeOptionMedium },\r\n                { key: 'Large', text: strings.SizeOptionLarge },\r\n                { key: 'Wallpaper', text: strings.SizeOptionExtraLarge }\r\n              ]}\r\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeSize(option)}\r\n            />\r\n            <Dropdown\r\n              className={styles.filterDropdown}\r\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\r\n              selectedKey={this.state.aspect}\r\n              options={[\r\n                { key: 'All', text: strings.LayoutOptionAll },\r\n                { key: 'Square', text: strings.LayoutOptionSquare },\r\n                { key: 'Wide', text: strings.LayoutOptionWide },\r\n                { key: 'Tall', text: strings.LayoutOptionTall },\r\n              ]}\r\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeLayout(option)}\r\n            />\r\n            <Dropdown\r\n              className={styles.filterDropdown}\r\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\r\n              selectedKey={license}\r\n              options={[\r\n                { key: 'All', text: strings.LicenseOptionAll },\r\n                { key: 'Any', text: strings.LicenseOptionAny }\r\n              ]}\r\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeLicense(option)}\r\n            />\r\n          </div>\r\n        }\r\n      </div>);\r\n  }\r\n\r\n  /**\r\n   * Handles when a user changes the size drop down.\r\n   * Resubmits search query\r\n   */\r\n  private _handleChangeSize = (option: IDropdownOption) => {\r\n    this.setState({\r\n      size: option.key as ImageSize\r\n    }, () => this._getSearchResults());\r\n  }\r\n\r\n  /**\r\n   * Handles when user selects a new layout from the drop down.\r\n   * Resubmits search query.\r\n   */\r\n  private _handleChangeLayout = (option: IDropdownOption) => {\r\n    this.setState({\r\n      aspect: option.key as ImageAspect\r\n    }, () => this._getSearchResults());\r\n  }\r\n\r\n  /**\r\n   * Handles when a user changes the license from the drop down\r\n   * Resubits search query\r\n   */\r\n  private _handleChangeLicense = (option: IDropdownOption) => {\r\n    this.setState({\r\n      license: option.key as ImageLicense\r\n    }, () => this._getSearchResults());\r\n  }\r\n\r\n  /**\r\n   * Renders the drop down placeholders\r\n   */\r\n  private _renderFilterPlaceholder = (props: IDropdownProps): JSX.Element => {\r\n    // return <span>{props.placeholder}</span>;\r\n    return <span>Pick the value</span>;\r\n  }\r\n\r\n  /**\r\n   * Handles when user triggers search query\r\n   */\r\n  private _handleSearch = (newQuery?: string) => {\r\n    this.setState({\r\n      query: newQuery\r\n    }, () => this._getSearchResults());\r\n  }\r\n\r\n  /**\r\n   * Handles when user closes search pane\r\n   */\r\n  private _handleClose = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  /**\r\n   * Handes when user saves selection\r\n   * Calls property pane file picker's save function\r\n   */\r\n  private _handleSave = () => {\r\n    this.props.onSave(this.state.filePickerResult);\r\n  }\r\n\r\n  /**\r\n   * Creates a reference to the list\r\n   */\r\n  private _linkElement = (e: any) => {\r\n    this._listElem = e;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}