{"version":3,"sources":["controls/gridLayout/GridLayout.test.tsx"],"names":[],"mappings":"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","file":"controls/gridLayout/GridLayout.test.js","sourcesContent":["/// <reference types=\"sinon\" />\r\n\r\nimport * as React from 'react';\r\nimport { assert, expect } from 'chai';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport { GridLayout } from './GridLayout';\r\n\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardActivity,\r\n  DocumentCardPreview,\r\n  //DocumentCardDetails,\r\n  DocumentCardTitle,\r\n  IDocumentCardPreviewProps,\r\n  DocumentCardLocation,\r\n  DocumentCardType\r\n} from 'office-ui-fabric-react/lib/DocumentCard';\r\nimport { ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { ISize } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\n\r\ndeclare const sinon;\r\n\r\ndescribe('<GridLayout />', () => {\r\n  let gridLayout: ReactWrapper;\r\n  const dummyItems: any[] = [{\r\n    thumbnail: \"https://pixabay.com/get/57e9dd474952a414f1dc8460825668204022dfe05555754d742e7bd6/hot-air-balloons-1984308_640.jpg\",\r\n    title: \"Adventures in SPFx\",\r\n    name: \"Perry Losselyong\",\r\n    profileImageSrc: \"https://robohash.org/blanditiisadlabore.png?size=50x50&set=set1\",\r\n    location: \"SharePoint\",\r\n    activity: \"3/13/2019\"\r\n  }, {\r\n    thumbnail: \"https://pixabay.com/get/55e8d5474a52ad14f1dc8460825668204022dfe05555754d742d79d0/autumn-3804001_640.jpg\",\r\n    title: \"The Wild, Untold Story of SharePoint!\",\r\n    name: \"Ebonee Gallyhaock\",\r\n    profileImageSrc: \"https://robohash.org/delectusetcorporis.bmp?size=50x50&set=set1\",\r\n    location: \"SharePoint\",\r\n    activity: \"6/29/2019\"\r\n  }, {\r\n    thumbnail: \"https://pixabay.com/get/57e8dd454c50ac14f1dc8460825668204022dfe05555754d742c72d7/log-cabin-1886620_640.jpg\",\r\n    title: \"Low Code Solutions: PowerApps\",\r\n    name: \"Seward Keith\",\r\n    profileImageSrc: \"https://robohash.org/asperioresautquasi.jpg?size=50x50&set=set1\",\r\n    location: \"PowerApps\",\r\n    activity: \"12/31/2018\"\r\n  }, {\r\n    thumbnail: \"https://pixabay.com/get/55e3d445495aa514f1dc8460825668204022dfe05555754d742b7dd5/portrait-3316389_640.jpg\",\r\n    title: \"Not Your Grandpa's SharePoint\",\r\n    name: \"Sharona Selkirk\",\r\n    profileImageSrc: \"https://robohash.org/velnammolestiae.png?size=50x50&set=set1\",\r\n    location: \"SharePoint\",\r\n    activity: \"11/20/2018\"\r\n  }, {\r\n    thumbnail: \"https://pixabay.com/get/57e6dd474352ae14f1dc8460825668204022dfe05555754d742a7ed1/faucet-1684902_640.jpg\",\r\n    title: \"Get with the Flow\",\r\n    name: \"Boyce Batstone\",\r\n    profileImageSrc: \"https://robohash.org/nulladistinctiomollitia.jpg?size=50x50&set=set1\",\r\n    location: \"Flow\",\r\n    activity: \"5/26/2019\"\r\n  }];\r\n\r\n  const dummyOnClick = sinon.spy((evt) => { /* Nothing to do here */ });\r\n\r\n  const dummyOnRenderGridItem = (item: any, _finalSize: ISize, isCompact: boolean): JSX.Element => {\r\n    const previewProps: IDocumentCardPreviewProps = {\r\n      previewImages: [\r\n        {\r\n          previewImageSrc: item.thumbnail,\r\n          imageFit: ImageFit.cover,\r\n          height: 130\r\n        }\r\n      ]\r\n    };\r\n\r\n    return <div\r\n      //className={styles.documentTile}\r\n      data-is-focusable={true}\r\n      role=\"listitem\"\r\n      aria-label={item.title}\r\n    >\r\n      <DocumentCard\r\n        type={isCompact ? DocumentCardType.compact : DocumentCardType.normal}\r\n        onClick={(ev: React.SyntheticEvent<HTMLElement>) => alert(\"You clicked on a grid item\")}\r\n\r\n      >\r\n        <DocumentCardPreview {...previewProps} />\r\n        {!isCompact && <DocumentCardLocation location={item.location} />}\r\n        <div>\r\n          <DocumentCardTitle\r\n            title={item.title}\r\n            shouldTruncate={true}\r\n          />\r\n          <DocumentCardActivity\r\n            activity={item.activity}\r\n            people={[{ name: item.name, profileImageSrc: item.profileImageSrc }]}\r\n          />\r\n        </div>\r\n      </DocumentCard>\r\n    </div>;\r\n  };\r\n\r\n  afterEach(() => {\r\n    gridLayout.unmount();\r\n  });\r\n\r\n  it('Test grid layout', (done) => {\r\n    gridLayout = mount(<GridLayout items={dummyItems} onRenderGridItem={(item: any, finalSize: ISize, isCompact: boolean)=>dummyOnRenderGridItem(item, finalSize, isCompact)} />);\r\n    expect(gridLayout.find('.ms-List-surface')).to.have.length(1);\r\n    done();\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}