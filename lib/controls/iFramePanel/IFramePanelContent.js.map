{"version":3,"sources":["controls/iFramePanel/IFramePanelContent.tsx"],"names":[],"mappings":"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","file":"controls/iFramePanel/IFramePanelContent.js","sourcesContent":["import * as React from \"react\";\r\nimport styles from './IFramePanelContent.module.scss';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport omit = require('lodash/omit');\r\nimport { IIFramePanelContentProps, IIFramePanelContentState } from \".\";\r\n\r\n/**\r\n * IFrame Panel content\r\n */\r\nexport class IFramePanelContent extends React.Component<IIFramePanelContentProps, IIFramePanelContentState> {\r\n  private _iframe: any;\r\n\r\n  constructor(props: IIFramePanelContentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isContentVisible: false\r\n    };\r\n    window.onresize = this.resizeIframe;\r\n  }\r\n\r\n  /**\r\n   * Resize the iframe element\r\n   */\r\n  private resizeIframe = () => {\r\n    if (!this.props.height) {\r\n      if (this._iframe) {\r\n        const mainDiv = this.findParent(this._iframe, \"ms-Panel-main\");\r\n        const commandsDiv = mainDiv.querySelector(\".ms-Panel-commands\") as HTMLDivElement;\r\n        const headerDiv = mainDiv.querySelector(\"ms-Panel-header\") as HTMLDivElement;\r\n        const footerDiv = mainDiv.querySelector(\"ms-Panel-footer\") as HTMLDivElement;\r\n\r\n        let height = this.getTrueHeight(mainDiv);\r\n        height = height - this.getTrueHeight(commandsDiv);\r\n        height = height - this.getTrueHeight(headerDiv);\r\n        height = height - this.getTrueHeight(footerDiv);\r\n        height = height - 20;  // padding on content div\r\n\r\n        this._iframe.height = height.toString() + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the parent element\r\n   *\r\n   * @param elm\r\n   * @param className\r\n   */\r\n  private findParent(elm: HTMLElement, className: string) {\r\n    while ((elm = elm.parentElement) && !elm.classList.contains(className));\r\n    return elm;\r\n  }\r\n\r\n  /**\r\n   * Get the element its height\r\n   *\r\n   * @param elm\r\n   */\r\n  private getTrueHeight(elm: HTMLElement): number {\r\n    if (elm) {\r\n      const style = elm.style || window.getComputedStyle(elm);\r\n      let marginTop = parseInt((style.marginTop as string).replace(\"px\", \"\"));\r\n      let marginBottom = parseInt((style.marginTop as string).replace(\"px\", \"\"));\r\n      if (isNaN(marginTop)) {\r\n        marginTop = 0;\r\n      }\r\n      if (isNaN(marginBottom)) {\r\n        marginBottom = 0;\r\n      }\r\n      return elm.offsetHeight + marginTop + marginBottom;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On iframe load event\r\n   */\r\n  private iframeOnLoad = () => {\r\n    try { // for cross origin requests we can have issues with accessing frameElement\r\n      this._iframe.contentWindow.frameElement.cancelPopUp = this.props.close;\r\n    }\r\n    catch (err) {\r\n      if (err.name !== 'SecurityError') {\r\n        throw err;\r\n      }\r\n    }\r\n\r\n    this.resizeIframe();\r\n\r\n    if (this.props.iframeOnLoad) {\r\n      this.props.iframeOnLoad(this._iframe);\r\n    }\r\n\r\n    this.setState({\r\n      isContentVisible: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Default React render\r\n   */\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className={styles.iFrameDialog}>\r\n        <iframe ref={(iframe) => { this._iframe = iframe; }} frameBorder={0} onLoad={this.iframeOnLoad} style={{ width: '100%', height: this.props.height, visibility: this.state.isContentVisible ? 'visible' : 'hidden' }} {...omit(this.props, 'height')} />\r\n\r\n        {\r\n          !this.state.isContentVisible && (\r\n            <div className={styles.spinnerContainer}>\r\n              <Spinner size={SpinnerSize.large} />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}