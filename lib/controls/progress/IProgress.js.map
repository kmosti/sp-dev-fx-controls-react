{"version":3,"sources":["controls/progress/IProgress.ts"],"names":[],"mappings":";;AAsBA;;GAEG;AACH,IAAY,mBAiBX;AAjBD,WAAY,mBAAmB;IAC3B;;OAEG;IACH,yEAAU,CAAA;IACV;;OAEG;IACH,yEAAU,CAAA;IACV;;OAEG;IACH,qEAAQ,CAAA;IACR;;OAEG;IACH,mEAAO,CAAA;AACX,CAAC,EAjBW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAiB9B","file":"controls/progress/IProgress.js","sourcesContent":["/**\r\n * Progress Action\r\n */\r\nexport interface IProgressAction {\r\n    /**\r\n     * Action title\r\n     */\r\n    title: string;\r\n    /**\r\n     * Sub actions titles\r\n     */\r\n    subActionsTitles?: string[];\r\n    /**\r\n     * Flag in the action has errored during the execution. Needed to correctly display action's icon\r\n     */\r\n    hasError?: boolean;\r\n    /**\r\n     * Error message\r\n     */\r\n    errorMessage?: string;\r\n}\r\n\r\n/**\r\n * Possible action's states\r\n */\r\nexport enum ProgressActionState {\r\n    /**\r\n     * Not started yet\r\n     */\r\n    notStarted,\r\n    /**\r\n     * Currently in progress\r\n     */\r\n    inProgress,\r\n    /**\r\n     * Finished with no errors\r\n     */\r\n    finished,\r\n    /**\r\n     * Errored\r\n     */\r\n    errored\r\n}\r\n\r\n/**\r\n * Progress component properties\r\n */\r\nexport interface IProgressProps {\r\n    /**\r\n     * Title (header)\r\n     */\r\n    title?: string;\r\n    /**\r\n     * Flag if overall progress indicator should be shown\r\n     */\r\n    showOverallProgress: boolean;\r\n    /**\r\n     * Flag if indeterminate progress animation will be shown \r\n     */\r\n    showIndeterminateOverallProgress?: boolean;\r\n    /**\r\n     * Flag if not started actions should not be rendered\r\n     */\r\n    hideNotStartedActions: boolean;\r\n    /**\r\n     * Progress actions\r\n     */\r\n    actions: IProgressAction[];\r\n    /**\r\n     * Current executing action\r\n     */\r\n    currentActionIndex?: number;\r\n    /**\r\n     * Height of the component\r\n     */\r\n    height?: string;\r\n    /**\r\n     * Text to display for long running operations\r\n     */\r\n    longRunningText?: string;\r\n    /**\r\n     * Delay until longRunningText is displayed im milliseconds. \r\n     * If not set or 0 longRunningText is displayed right away.\r\n     */\r\n    longRunningTextDisplayDelay?: number;\r\n    /**\r\n     * Class name to be applied to the component\r\n     */\r\n    className?: string;\r\n    /**\r\n     * Header class name. Header contains title, progress indicator, and delay text\r\n     */\r\n    headerClassName?: string;\r\n    /**\r\n     * Actions container class name\r\n     */\r\n    actionsContainerClassName?: string;\r\n    /**\r\n     * Single action class name\r\n     */\r\n    actionClassName?: string;\r\n\r\n    /**\r\n     * Success icon name. Default is CheckMark\r\n     */\r\n    successIconName?: string;\r\n    /**\r\n     * Error icon name. Default is Error\r\n     */\r\n    errorIconName?: string;\r\n    /**\r\n     * InProgress icon name. Default is '', spinner is displayed.\r\n     */\r\n    inProgressIconName?: string;\r\n\r\n}\r\n\r\n/**\r\n * Progress component state\r\n */\r\nexport interface IProgressState {\r\n    /**\r\n     * flag if long running text should be displayed\r\n     */\r\n    showLongRunningText?: boolean;\r\n}\r\n\r\n/**\r\n * Action component properties\r\n */\r\nexport interface IActionProps extends IProgressAction {\r\n    /**\r\n     * Action state\r\n     */\r\n    state: ProgressActionState;\r\n    /**\r\n     * Action class name\r\n     */\r\n    className?: string;\r\n\r\n    /**\r\n     * Success icon name. Default is CheckMark\r\n     */\r\n    successIconName?: string;\r\n    /**\r\n     * Error icon name. Default is Error\r\n     */\r\n    errorIconName?: string;\r\n    /**\r\n     * InProgress icon name. Default is '', spinner is displayed.\r\n     */\r\n    inProgressIconName?: string;\r\n}"],"sourceRoot":"..\\..\\..\\src"}