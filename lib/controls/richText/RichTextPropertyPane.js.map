{"version":3,"sources":["controls/richText/RichTextPropertyPane.tsx"],"names":[],"mappings":"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","file":"controls/richText/RichTextPropertyPane.js","sourcesContent":["import * as React from 'react';\r\nimport * as strings from 'ControlStrings';\r\nimport styles from './RichTextPropertyPane.module.scss';\r\nimport RteColorPicker from './RteColorPicker';\r\nimport { IRichTextPropertyPaneProps, IRichTextPropertyPaneState } from './RichTextPropertyPane.types';\r\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { ThemeColorHelper } from '../../common/utilities/ThemeColorHelper';\r\n\r\nexport default class RichTextPropertyPane extends React.Component<IRichTextPropertyPaneProps, IRichTextPropertyPaneState> {\r\n\r\n  constructor(props: IRichTextPropertyPaneProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formats: {}\r\n    };\r\n  }\r\n\r\n  /**\r\n   * componentDidUpdate lifecycle hook\r\n   *\r\n   * @param prevProps\r\n   * @param prevState\r\n   */\r\n  public componentDidUpdate(prevProps: IRichTextPropertyPaneProps, prevState: IRichTextPropertyPaneState): void {\r\n    // if we're just opening, sync the format choices with the current selection\r\n    if (!prevProps.isOpen && this.props.isOpen) {\r\n      const quill = this.props.editor;\r\n      if (quill === undefined) {\r\n        return;\r\n      }\r\n\r\n      const range = quill.getSelection();\r\n      this.onChangeSelection(range, undefined, undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default React render method\r\n   */\r\n  public render(): React.ReactElement<IRichTextPropertyPaneProps> {\r\n    return (\r\n      <Panel className={styles.richTextPropertyPane}\r\n             isBlocking={false}\r\n             isOpen={this.props.isOpen}\r\n             type={PanelType.smallFixedFar}\r\n             onDismiss={this.props.onClose}\r\n             closeButtonAriaLabel={strings.CloseButton}\r\n             onRenderNavigation={this.handleRenderNavigation}\r\n             focusTrapZoneProps={{\r\n              forceFocusInsideTrap: false,\r\n              isClickableOutsideFocusTrap: true\r\n             }}>\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <div className={styles.propertyPaneGroupContent}>\r\n                {this.renderActionsGroup()}\r\n                {this.renderFontStylesGroup()}\r\n                {this.renderFontSizesGroup()}\r\n                {this.renderInlineStylesGroup()}\r\n                {this.renderColorStylesGroup()}\r\n              </div>\r\n            </div>\r\n            <div className={styles.propertyPaneGroupContent}>\r\n              <div className={styles.propertyPaneGroupHeaderNoAccordion}>{strings.ParagraphSectionTitle}</div>\r\n              {this.renderAlignmentStylesGroup()}\r\n              {this.renderListStylesGroup()}\r\n            </div>\r\n            <div className={styles.propertyPaneGroupContent}>\r\n              <div className={styles.propertyPaneGroupHeaderNoAccordion}>{strings.HyperlinkSectionTitle}</div>\r\n              {this.renderHyperlinkStylesGroup()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * On selection changed event handler\r\n   */\r\n  public onChangeSelection = (range, oldRange?, source?) => {\r\n    const quill = this.props.editor;\r\n    if (quill === undefined || range === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (range) {\r\n      const formats = quill.getFormat(range);\r\n      this.setState({\r\n        formats\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render the actions group\r\n   */\r\n  private renderActionsGroup = (): JSX.Element => {\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <div className=\"ms-CustomFieldHost\">\r\n          <div className={styles.controlsInOneRow}>\r\n            <TooltipHost content={strings.UndoTitle}\r\n                         id=\"undo-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton onClick={this.handleUndo}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"undo-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Undo',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.RedoTitle}\r\n                         id=\"redo-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton onClick={this.handleRedo}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"redo-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Redo',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.ClearFormattingTitle}\r\n                         id=\"clearFormatting-button-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton onClick={this.handleClearFormatting}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"clearFormatting-button-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'ClearFormatting',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render font styles group\r\n   */\r\n  private renderFontStylesGroup = (): JSX.Element => {\r\n    const selectedHeader = this.state.formats!.header ? this.state.formats!.header : 0;\r\n\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <Dropdown label={strings.FontStyleTitle}\r\n                  ariaLabel={strings.FontStyleTitle}\r\n                  defaultSelectedKey={0}\r\n                  selectedKey={selectedHeader}\r\n                  options={[\r\n                    { key: 0, text: strings.HeaderNormalText },\r\n                    { key: 2, text: strings.HeaderH2 },\r\n                    { key: 3, text: strings.HeaderH3 },\r\n                    { key: 4, text: strings.HeaderH4 },\r\n                    { key: 7, text: strings.HeaderBlockQuote }\r\n                  ]}\r\n                  onChanged={this.onChangeHeading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render font size group\r\n   */\r\n  private renderFontSizesGroup = (): JSX.Element => {\r\n    // get the selected header\r\n    const selectedSize = this.state.formats!.size ? this.state.formats!.size : 'large';\r\n\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <Dropdown label={strings.FontSizeTitle}\r\n                  ariaLabel={strings.FontSizeTitle}\r\n                  defaultSelectedKey={'large'}\r\n                  selectedKey={selectedSize}\r\n                  options={[\r\n                    { key: 'small', text: '12' },\r\n                    { key: 'medium', text: '14' },\r\n                    { key: 'mediumplus', text: '15' },\r\n                    { key: 'large', text: '17' },\r\n                    { key: 'xlarge', text: '21' },\r\n                    { key: 'xlargeplus', text: '24' },\r\n                    { key: 'xxlarge', text: '28' },\r\n                    { key: 'xxxlarge', text: '32' },\r\n                    { key: 'xxlargeplus', text: '36' },\r\n                    { key: 'super', text: '42' },\r\n                  ]}\r\n                  onChanged={this.onChangeSize}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render inline styles group\r\n   */\r\n  private renderInlineStylesGroup = (): JSX.Element => {\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <div className=\"ms-CustomFieldHost\">\r\n          <div className={styles.controlsInOneRow}>\r\n            <TooltipHost content={strings.BoldTitle}\r\n                         id=\"bold-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.bold}\r\n                          onClick={() => this.applyFormat('bold', !this.state.formats!.bold)}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"bold-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Bold',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.ItalicTitle}\r\n                         id=\"italic-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.italic}\r\n                          onClick={() => this.applyFormat('italic', !this.state.formats!.italic)}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"italic-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Italic',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.UnderlineTitle}\r\n                         id=\"underline-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.underline}\r\n                          onClick={() => this.applyFormat('underline', !this.state.formats!.underline)}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"underline-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Underline',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.StrikethroughTitle}\r\n                         id=\"strikethrough-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.strike}\r\n                          onClick={() => this.applyFormat('strike', !this.state.formats!.strike)}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"strikethrough-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Strikethrough',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.SuperscriptTitle}\r\n                         id=\"superscript-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.script === 'super'}\r\n                          onClick={() => this.applyFormat('script', this.state.formats!.script === 'super' ? '' : 'super')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"superscript-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Superscript',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.SubscriptTitle}\r\n                         id=\"subscript-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.script === 'sub'}\r\n                          onClick={() => this.applyFormat('script', this.state.formats!.script === 'sub' ? '' : 'sub')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"subscript-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Subscript',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render color styles group\r\n   */\r\n  private renderColorStylesGroup = (): JSX.Element => {\r\n    const color: string = this.state.formats.color || ThemeColorHelper.GetThemeColor(styles.NeutralPrimary);\r\n    const backgroundColor: string = this.state.formats.background || \"rgba(0, 0, 0, 0)\";\r\n\r\n    /**\r\n     * Add custom colors if passed as a property\r\n     */\r\n    let fontColorGroups = [\"themeColors\",\"standardColors\"];\r\n    if(this.props.customColors) fontColorGroups.push('customColors');\r\n\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <div className=\"ms-CustomFieldHost\">\r\n          <div className={styles.controlsInOneRow}>\r\n            <RteColorPicker colorPickerGroups={fontColorGroups} // changed to variable\r\n                            customColors={this.props.customColors}\r\n                            buttonLabel={strings.FontColorLabel}\r\n                            id=\"fontColor-propertyPaneButton\"\r\n                            defaultButtonLabel={strings.AutomaticFontColor}\r\n                            fillThemeColor={true}\r\n                            previewColor={color}\r\n                            selectedColor={color}\r\n                            onColorChanged={this.handleFillColorChanged}\r\n                            switchToDefaultColor={() => this.handleFillColorChanged(undefined)} />\r\n\r\n            <RteColorPicker buttonLabel={strings.HighlightColorLabel}\r\n                            colorPickerGroups={[\r\n                              \"highlightColors\"\r\n                            ]}\r\n                            fillThemeColor={false}\r\n                            onColorChanged={this.handleHighlightColorChanged}\r\n                            switchToDefaultColor={() => this.handleHighlightColorChanged(undefined)}\r\n                            previewColor={backgroundColor}\r\n                            defaultButtonLabel={strings.NoColorHighlightColor}\r\n                            selectedColor={backgroundColor}\r\n                            id=\"highlightColor-propertyPaneButton\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render alignment style groups\r\n   */\r\n  private renderAlignmentStylesGroup = (): JSX.Element => {\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <div className=\"ms-CustomFieldHost\">\r\n          <div className={styles.controlsInOneRow}>\r\n            <TooltipHost content={strings.AlignLeft}\r\n                         id=\"left-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.align === undefined}\r\n                          onClick={() => this.applyFormat('align', 'left')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"left-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'AlignLeft',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.AlignCenter}\r\n                         id=\"center-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.align === 'center'}\r\n                          onClick={() => this.applyFormat('align', 'center')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"center-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'AlignCenter',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.AlignRight}\r\n                         id=\"right-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.align === 'right'}\r\n                          onClick={() => this.applyFormat('align', 'right')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"right-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'AlignRight',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.AlignJustify}\r\n                         id=\"justify-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.align === 'justify'}\r\n                          onClick={() => this.applyFormat('align', 'justify')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"justify-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'AlignJustify',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.IncreaseIndentTitle}\r\n                         id=\"increaseindent-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.script === 'super'}\r\n                          onClick={() => this.applyFormat('script', this.state.formats!.script === 'super' ? '' : 'super')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"increaseindent-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'IncreaseIndentLegacy',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.DecreaseIndentTitle}\r\n                         id=\"decreaseindent-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.script === 'sub'}\r\n                          onClick={() => this.applyFormat('script', this.state.formats!.script === 'sub' ? '' : 'sub')}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"decreaseindent-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'DecreaseIndentLegacy',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render list styles group\r\n   */\r\n  private renderListStylesGroup = (): JSX.Element => {\r\n    return <div className={styles.propertyPaneGroupField}>\r\n      <div className=\"ms-CustomFieldHost\">\r\n        <div className={styles.controlsInOneRow}>\r\n          <TooltipHost content={strings.ListBullet}\r\n                       id=\"bullet-propertyPaneButton\"\r\n                       calloutProps={{ gapSpace: 0 }}>\r\n            <IconButton checked={this.state.formats!.list === 'bullet'}\r\n                        onClick={() => this.applyFormat('list', 'bullet')}\r\n                        className={styles.propertyPaneButton}\r\n                        aria-describedby=\"bullet-propertyPaneButton\"\r\n                        iconProps={{\r\n                          iconName: 'BulletedList',\r\n                          style: {\r\n                            fontSize: '20px'\r\n                          }\r\n                        }} />\r\n          </TooltipHost>\r\n\r\n          <TooltipHost content={strings.ListNumbered}\r\n                       id=\"ordered-propertyPaneButton\"\r\n                       calloutProps={{ gapSpace: 0 }}>\r\n            <IconButton checked={this.state.formats!.list === 'ordered'}\r\n                        onClick={() => this.applyFormat('list', 'ordered')}\r\n                        className={styles.propertyPaneButton}\r\n                        aria-describedby=\"ordered-propertyPaneButton\"\r\n                        iconProps={{\r\n                          iconName: 'NumberedList',\r\n                          style: {\r\n                            fontSize: '20px'\r\n                          }\r\n                        }} />\r\n          </TooltipHost>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  /**\r\n   * Render hyperlink styles group\r\n   */\r\n  private renderHyperlinkStylesGroup = (): JSX.Element => {\r\n    return (\r\n      <div className={styles.propertyPaneGroupField}>\r\n        <div className=\"ms-CustomFieldHost\">\r\n          <div className={styles.controlsInOneRow}>\r\n            <TooltipHost content={strings.LinkTitle}\r\n                         id=\"link-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton checked={this.state.formats!.link !== undefined}\r\n                          onClick={() => this.props.onLink()}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"link-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'Link',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost content={strings.RemoveLinkLabel}\r\n                         id=\"unlink-propertyPaneButton\"\r\n                         calloutProps={{ gapSpace: 0 }}>\r\n              <IconButton disabled={this.state.formats!.link === undefined}\r\n                          onClick={() => this.applyFormat('link', false)}\r\n                          className={styles.propertyPaneButton}\r\n                          aria-describedby=\"unlink-propertyPaneButton\"\r\n                          iconProps={{\r\n                            iconName: 'RemoveLink',\r\n                            style: {\r\n                              fontSize: '20px'\r\n                            }\r\n                          }} />\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle fill color change\r\n   */\r\n  private handleFillColorChanged = (color: string) => {\r\n    this.applyFormat('color', color);\r\n  }\r\n\r\n  /**\r\n   * Handle the hightlight color change\r\n   */\r\n  private handleHighlightColorChanged = (color: string) => {\r\n    this.applyFormat('background', color);\r\n  }\r\n\r\n  /**\r\n   * On heading change\r\n   */\r\n  private onChangeHeading = (item: IDropdownOption): void => {\r\n    const newHeadingValue = item.key === 0 ? '' : item.key.toString();\r\n    this.applyFormat(\"header\", newHeadingValue);\r\n  }\r\n\r\n  /**\r\n   * On size change\r\n   */\r\n  private onChangeSize = (item: IDropdownOption): void => {\r\n    const newSizeValue = item.key === 0 ? '' : item.key.toString();\r\n    this.applyFormat(\"size\", newSizeValue);\r\n  }\r\n\r\n  /**\r\n   * Apply the new format\r\n   *\r\n   * @param name\r\n   * @param value\r\n   */\r\n  private applyFormat(name: string, value: any) {\r\n    const quill = this.props.editor;\r\n    quill.format(name, value);\r\n    setTimeout(() => {\r\n      this.onChangeSelection(quill.getSelection());\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Handle the undo action\r\n   */\r\n  private handleUndo = (): void => {\r\n    const quill = this.props.editor;\r\n    quill!.getModule(\"history\")!.undo();\r\n    setTimeout(() => {\r\n      this.onChangeSelection(quill.getSelection());\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Handle the clear formatting action\r\n   */\r\n  private handleClearFormatting = (): void => {\r\n    const quill = this.props.editor;\r\n    var range = quill.getSelection();\r\n    if (range) {\r\n      if (range.length > 0) {\r\n        quill.removeFormat(range.index, range.length);\r\n        setTimeout(() => {\r\n          this.onChangeSelection(quill.getSelection());\r\n        }, 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the redo action\r\n   */\r\n  private handleRedo = (): void => {\r\n    const quill = this.props.editor;\r\n    quill!.getModule(\"history\")!.redo();\r\n    setTimeout(() => {\r\n      this.onChangeSelection(quill.getSelection());\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Navigation render\r\n   */\r\n  private handleRenderNavigation = (): JSX.Element => {\r\n    return (\r\n      <div className={styles.formattingPaneTitle} aria-hidden=\"true\">{strings.FormattingPaneTitle}\r\n        <IconButton onClick={() => this.props.onClose()}\r\n                    className={styles.propertyPaneClose}\r\n                    iconProps={{\r\n                      iconName: 'Cancel'\r\n                    }}\r\n                    title={strings.CloseButton}\r\n                    ariaLabel={strings.CloseButton} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}