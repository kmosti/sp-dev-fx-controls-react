{"version":3,"sources":["controls/securityTrimmedControl/SecurityTrimmedControl.tsx"],"names":[],"mappings":"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","file":"controls/securityTrimmedControl/SecurityTrimmedControl.js","sourcesContent":["import * as React from 'react';\r\nimport { ISecurityTrimmedControlProps, ISecurityTrimmedControlState, PermissionLevel } from '.';\r\nimport { SPHttpClient } from '@microsoft/sp-http';\r\nimport { SPPermission } from '@microsoft/sp-page-context';\r\nimport * as telemetry from '../../common/telemetry';\r\n\r\nexport class SecurityTrimmedControl extends React.Component<ISecurityTrimmedControlProps, ISecurityTrimmedControlState> {\r\n  constructor(props: ISecurityTrimmedControlProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allowRender: false\r\n    };\r\n\r\n    telemetry.track('ReactPlaceholder', {});\r\n  }\r\n\r\n  /**\r\n   * componentDidMount lifecycle method\r\n   */\r\n  public componentDidMount(): void {\r\n    this.checkPermissions();\r\n  }\r\n\r\n  /**\r\n   * componentDidUpdate lifecycle method\r\n   */\r\n  public componentDidUpdate(prevProps: ISecurityTrimmedControlProps, prevState: ISecurityTrimmedControlState): void {\r\n    // Check permissions only if necessary\r\n    if (prevProps.level !== this.props.level ||\r\n      prevProps.permissions !== this.props.permissions ||\r\n      prevProps.relativeLibOrListUrl !== this.props.relativeLibOrListUrl ||\r\n      prevProps.remoteSiteUrl !== this.props.remoteSiteUrl ||\r\n      prevProps.folderPath !== this.props.folderPath ||\r\n      prevProps.itemId !== this.props.itemId) {\r\n      this.checkPermissions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the user has the permissions to render the element\r\n   */\r\n  private checkPermissions() {\r\n    const { context, level } = this.props;\r\n    // Check if the permission level needs to be checked on the current site\r\n    if (level === PermissionLevel.currentWeb || level === PermissionLevel.currentList) {\r\n      // Get the permission scope\r\n      const { permissions } = level === PermissionLevel.currentWeb ? context.pageContext.web : context.pageContext.list;\r\n      // Check the user its permissions\r\n      if (permissions.hasAllPermissions(...this.props.permissions)) {\r\n        this.setState({\r\n          allowRender: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          allowRender: false\r\n        });\r\n      }\r\n    } else if (level === PermissionLevel.remoteWeb) {\r\n      // Check permissions on remote site\r\n      this.checkRemoteSitePermissions();\r\n    } else if (level === PermissionLevel.remoteListOrLib) {\r\n      // Check permissions on remote list/library\r\n      this.checkRemoteListOrLibPermissions();\r\n    } else if (level === PermissionLevel.remoteListItem) {\r\n      this.checkRemoteListItem();\r\n    } else if (level === PermissionLevel.remoteFolder) {\r\n      this.checkRemoteFolder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the user its permissions on the remote site\r\n   */\r\n  private async checkRemoteSitePermissions() {\r\n    const { context, remoteSiteUrl, permissions } = this.props;\r\n    if (remoteSiteUrl && permissions) {\r\n      for (const permission of permissions) {\r\n        const apiUrl = `${remoteSiteUrl}/_api/web/DoesUserHavePermissions(@v)?@v=${JSON.stringify(permission.value)}`;\r\n        const result = await context.spHttpClient.get(apiUrl, SPHttpClient.configurations.v1).then(data => data.json());\r\n        // Check if a result was retrieved\r\n        if (result) {\r\n          // Check if an error was retrieved\r\n          if (result.error) {\r\n            // Do not allow rendering when there was an error\r\n            this.setState({\r\n              allowRender: false\r\n            });\r\n            console.error(`Error retrieved while checking user's remote site permissions.`);\r\n            return;\r\n          }\r\n          // Check the result value\r\n          if (typeof result.value !== \"undefined\" && result.value === false) {\r\n            this.setState({\r\n              allowRender: false\r\n            });\r\n            return;\r\n          }\r\n        } else {\r\n          this.setState({\r\n            allowRender: false\r\n          });\r\n          console.error(`No result value was retrieved when checking the user's remote site permissions.`);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Render the controls when the permissions were OK for the user\r\n      this.setState({\r\n        allowRender: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the user its permissions on the remote list or library\r\n   */\r\n  private async checkRemoteListOrLibPermissions() {\r\n    const { remoteSiteUrl, relativeLibOrListUrl, permissions } = this.props;\r\n    // Check if all properties are provided\r\n    if (remoteSiteUrl && relativeLibOrListUrl && permissions) {\r\n      const apiUrl = `${remoteSiteUrl}/_api/web/GetList(@listUrl)/EffectiveBasePermissions?@listUrl='${encodeURIComponent(relativeLibOrListUrl)}'`;\r\n      const hasPermissions = await this.checkRemotePermissions(apiUrl);\r\n      this.setState({\r\n        allowRender: hasPermissions\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check permissions on item level\r\n   */\r\n  private async checkRemoteListItem() {\r\n    const { remoteSiteUrl, relativeLibOrListUrl, permissions, itemId } = this.props;\r\n    // Check if all properties are provided\r\n    if (remoteSiteUrl && relativeLibOrListUrl && permissions && itemId) {\r\n      const apiUrl = `${remoteSiteUrl}/_api/web/GetList(@listUrl)/Items(${itemId})/EffectiveBasePermissions?@listUrl='${encodeURIComponent(relativeLibOrListUrl)}'`;\r\n      const hasPermissions = await this.checkRemotePermissions(apiUrl);\r\n      this.setState({\r\n        allowRender: hasPermissions\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check permissions on folder\r\n   */\r\n  private async checkRemoteFolder() {\r\n    const { remoteSiteUrl, relativeLibOrListUrl, permissions, folderPath } = this.props;\r\n    // Check if all properties are provided\r\n    if (remoteSiteUrl && relativeLibOrListUrl && permissions && folderPath) {\r\n      const folderByServerRelativeUrl: string = `${encodeURIComponent(relativeLibOrListUrl)}/${encodeURIComponent(folderPath)}`;\r\n      const apiUrl = `${remoteSiteUrl}/_api/web/GetFolderByServerRelativeUrl(@folderByServerRelativeUrl)/ListItemAllFields/EffectiveBasePermissions?@folderByServerRelativeUrl='${folderByServerRelativeUrl}'`;\r\n      const hasPermissions = await this.checkRemotePermissions(apiUrl);\r\n      this.setState({\r\n        allowRender: hasPermissions\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the permissions\r\n   *\r\n   * @param apiUrl\r\n   */\r\n  private async checkRemotePermissions(apiUrl: string) {\r\n    const { context, permissions } = this.props;\r\n    const data = await context.spHttpClient.get(apiUrl, SPHttpClient.configurations.v1);\r\n    // Check if a result was retrieved\r\n    if (data && data.ok) {\r\n      const result = await data.json();\r\n      // Check if an error was retrieved\r\n      if (result.error) {\r\n        // Do not allow rendering when there was an error\r\n        console.error(`Error retrieved while checking permissions`);\r\n        return false;\r\n      }\r\n\r\n      // Check the result high and low value are returned\r\n      if (typeof result.High !== \"undefined\" && typeof result.Low !== \"undefined\") {\r\n        // Create the permission mask\r\n        const permission = new SPPermission(result);\r\n        const hasPermissions = permission.hasAllPermissions(...permissions);\r\n        return hasPermissions;\r\n      }\r\n    } else {\r\n      console.error(`No result value was retrieved when checking the user's permissions.`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default React render method\r\n   */\r\n  public render(): React.ReactElement<ISecurityTrimmedControlProps> {\r\n    const { className } = this.props;\r\n    return (\r\n      this.state.allowRender ? (\r\n        <div className={className ? className : \"\"}>{this.props.children}</div>\r\n      ) : null\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}