{"version":3,"sources":["controls/siteBreadcrumb/SiteBreadcrumb.tsx"],"names":[],"mappings":"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","file":"controls/siteBreadcrumb/SiteBreadcrumb.js","sourcesContent":["import * as React from 'react';\r\nimport { ISiteBreadcrumbProps, ISiteBreadcrumbState, IWebInfo } from './ISiteBreadcrumb';\r\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\r\nimport { SPHttpClient, HttpClientResponse } from '@microsoft/sp-http';\r\nimport styles from './SiteBreadcrumb.module.scss';\r\nimport * as strings from 'ControlStrings';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport * as telemetry from '../../common/telemetry';\r\n\r\n/**\r\n * Site breadcrumb component\r\n */\r\nexport class SiteBreadcrumb extends React.Component<ISiteBreadcrumbProps, ISiteBreadcrumbState> {\r\n  private _linkItems: IBreadcrumbItem[];\r\n\r\n  constructor(props: ISiteBreadcrumbProps) {\r\n    super(props);\r\n\r\n    telemetry.track('ReactSiteBreadcrumb');\r\n\r\n    // Initiate the private link items variable\r\n    this._linkItems = [];\r\n\r\n    // Initiate the component state\r\n    this.state = {\r\n      breadcrumbItems: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * React component lifecycle hook, runs after render\r\n   */\r\n  public componentDidMount() {\r\n    // Start generating the links for the breadcrumb\r\n    this._generateLinks();\r\n  }\r\n\r\n  /**\r\n   * Start the link generation for the breadcrumb\r\n   */\r\n  private _generateLinks() {\r\n    // Add the current site to the links list\r\n    this._linkItems.push({\r\n      text: this.props.context.pageContext.web.title,\r\n      key: this.props.context.pageContext.web.id.toString(),\r\n      href: this.props.context.pageContext.web.absoluteUrl,\r\n      isCurrentItem: !!this.props.context.pageContext.list && !this.props.context.pageContext.list.serverRelativeUrl\r\n    });\r\n\r\n    // Check if the current list URL is available\r\n    if (!!this.props.context.pageContext.list && !!this.props.context.pageContext.list.serverRelativeUrl) {\r\n      // Add the current list to the links list\r\n      this._linkItems.push({\r\n        text: this.props.context.pageContext.list.title,\r\n        key: this.props.context.pageContext.list.id.toString(),\r\n        href: this.props.context.pageContext.list.serverRelativeUrl,\r\n        isCurrentItem: true\r\n      });\r\n    }\r\n\r\n    // Check if you are already on the root site\r\n    if (this.props.context.pageContext.site.serverRelativeUrl === this.props.context.pageContext.web.serverRelativeUrl) {\r\n      this._setBreadcrumbData();\r\n    } else {\r\n      if (Environment.type === EnvironmentType.Local) {\r\n        // Nothing to do right now\r\n        this._setBreadcrumbData();\r\n      } else {\r\n        // Retrieve the parent webs information\r\n        this._getParentWeb(this.props.context.pageContext.web.absoluteUrl);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the parent web URLs\r\n   * @param webUrl Current URL of the web to process\r\n   */\r\n  private _getParentWeb(webUrl: string) {\r\n    // Retrieve the parent web info\r\n    const apiUrl = `${webUrl}/_api/web/parentweb?$select=Id,Title,ServerRelativeUrl`;\r\n    this.props.context.spHttpClient.get(apiUrl, SPHttpClient.configurations.v1)\r\n      .then((response: HttpClientResponse) => {\r\n        return response.json();\r\n      })\r\n      .then((webInfo: IWebInfo) => {\r\n        if (!webInfo.error) {\r\n          // Check if the correct data is retrieved\r\n          if (!webInfo.ServerRelativeUrl && !webInfo.Title) {\r\n            this._setBreadcrumbData();\r\n            return;\r\n          }\r\n\r\n          // Store the current site\r\n          this._linkItems.unshift({\r\n            text: webInfo.Title,\r\n            key: webInfo.Id,\r\n            href: webInfo.ServerRelativeUrl\r\n          });\r\n\r\n          // Check if you retrieved all the information up until the root site\r\n          if (webInfo.ServerRelativeUrl === this.props.context.pageContext.site.serverRelativeUrl) {\r\n            this._setBreadcrumbData();\r\n          } else {\r\n            // retrieve the information from the parent site\r\n            webUrl = webUrl.substring(0, (webUrl.indexOf(`${webInfo.ServerRelativeUrl}/`) + webInfo.ServerRelativeUrl.length));\r\n            this._getParentWeb(webUrl);\r\n          }\r\n        } else {\r\n          // Set the current breadcrumb data which is already retrieved\r\n          this._setBreadcrumbData();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Set the current breadcrumb data\r\n   */\r\n  private _setBreadcrumbData() {\r\n    this.setState({\r\n      breadcrumbItems: this._linkItems\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Default React component render method\r\n   */\r\n  public render(): React.ReactElement<ISiteBreadcrumbProps> {\r\n    return (\r\n      <div className={styles.breadcrumb} >\r\n        <Breadcrumb\r\n          items={this.state.breadcrumbItems}\r\n          ariaLabel={strings.SiteBreadcrumbLabel}\r\n          className={styles.breadcrumbLinks} />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}