{"version":3,"sources":["controls/taxonomyPicker/termActions/DropdownTermAction.tsx"],"names":[],"mappings":"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","file":"controls/taxonomyPicker/termActions/DropdownTermAction.js","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { ITerm } from '../../../services/ISPTermStorePickerService';\r\nimport { ITermAction, TermActionsDisplayStyle, IConcreteTermActionProps } from './ITermsActions';\r\nimport { IContextualMenuItem, IContextualMenuProps } from 'office-ui-fabric-react/lib/ContextualMenu';\r\n\r\nexport class DropdownTermAction extends React.Component<IConcreteTermActionProps> {\r\n\r\n  /**\r\n   * componentWillMount lifecycle hook\r\n   */\r\n  public componentWillMount(): void {\r\n    this.checkForImmediateInvocations();\r\n  }\r\n\r\n  /**\r\n   * Prepates contextual menu items for dropdown.\r\n   */\r\n  private prepareContextualMenuProps = (term: ITerm, termActions: ITermAction[]): IContextualMenuProps => {\r\n    let items: IContextualMenuItem[] = [];\r\n    const displayStyle = this.props.displayStyle;\r\n    let useTargetWidth = true;\r\n\r\n    for (const termAction of termActions) {\r\n      if (!termAction.hidden) {\r\n        let termActionMenuItem: IContextualMenuItem = {\r\n          key: term.Id.toString(),\r\n          onClick: () => { this.onActionExecute(termAction); }\r\n        };\r\n\r\n        if (displayStyle && (displayStyle === TermActionsDisplayStyle.text || displayStyle === TermActionsDisplayStyle.textAndIcon)) {\r\n          termActionMenuItem.text = termAction.title;\r\n          termActionMenuItem.name = termAction.title;\r\n          useTargetWidth = false;\r\n        }\r\n        if (displayStyle && (displayStyle === TermActionsDisplayStyle.icon || displayStyle === TermActionsDisplayStyle.textAndIcon)) {\r\n          termActionMenuItem.iconProps = { iconName: termAction.iconName };\r\n        }\r\n\r\n        items.push(termActionMenuItem);\r\n      }\r\n    }\r\n\r\n    const contextualMenuProps: IContextualMenuProps = {\r\n      items,\r\n      useTargetWidth\r\n    };\r\n    return contextualMenuProps;\r\n  }\r\n\r\n  /**\r\n   * Prepare term action button style.\r\n   */\r\n  private getTermActionActionButtonStyle = (): React.CSSProperties => {\r\n    let result: React.CSSProperties = {\r\n      backgroundColor: \"transparent\",\r\n      width: \"14px\",\r\n      display: \"inline-flex\",\r\n      padding: \"0px\"\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check if there are action to immediatly invoke\r\n   */\r\n  private checkForImmediateInvocations() {\r\n    const { termActions } = this.props;\r\n    for (const action of termActions) {\r\n      if (action.invokeActionOnRender) {\r\n        this.onActionExecute(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handler to execute selected action.\r\n   */\r\n  private onActionExecute = async (termAction: ITermAction) => {\r\n    const updateAction = await termAction.actionCallback(this.props.spTermService, this.props.term);\r\n    this.props.termActionCallback(updateAction);\r\n  }\r\n\r\n  /**\r\n   * Default React render method\r\n   */\r\n  public render(): React.ReactElement<IConcreteTermActionProps> {\r\n    const { term, termActions } = this.props;\r\n\r\n    const termActionButtonStyle = this.getTermActionActionButtonStyle();\r\n    const contextualMenuProps = this.prepareContextualMenuProps(term, termActions);\r\n\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'stretch', height: '32px' }}>\r\n        <DefaultButton style={termActionButtonStyle} menuProps={contextualMenuProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}