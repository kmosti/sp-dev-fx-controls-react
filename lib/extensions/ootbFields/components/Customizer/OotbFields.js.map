{"version":3,"sources":["extensions/ootbFields/components/Customizer/OotbFields.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,8DAAiD;AACjD,oDAAiD;AACjD,6BAA+B;AAE/B,mEAA8C;AAE9C,wFAAuF;AAevF,IAAM,UAAU,GAAW,YAAY,CAAC;AAExC;;GAEG;AACH;IAAwC,8BAAmD;IACzF,oBAAmB,KAAuB,EAAE,KAAuB;QAAnE,YACE,kBAAM,KAAK,EAAE,KAAK,CAAC,SAGpB;QADC,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IAClB,CAAC;IAGM,uCAAkB,GAAzB;QADA,iBAUC;QARC,yCAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACrD,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;YAC/B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;SAC9B,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,aAAa;YAC5D,KAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,aAAa;aAC7B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,sCAAiB,GAAxB;QACE,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,mCAAmC,CAAC,CAAC;IAC5D,CAAC;IAGM,yCAAoB,GAA3B;QACE,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,qCAAqC,CAAC,CAAC;IAC9D,CAAC;IAGM,2BAAM,GAAb;QACE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,gCAAM,CAAC,IAAI,IACxB,IAAI,CAAC,KAAK,CAAC,aAAa,CACrB,CACP,CAAC;IACJ,CAAC;IA5BD;QADC,qBAAQ;wDAUR;IAGD;QADC,qBAAQ;uDAGR;IAGD;QADC,qBAAQ;0DAGR;IAGD;QADC,qBAAQ;4CAOR;IACH,iBAAC;CArCD,AAqCC,CArCuC,KAAK,CAAC,SAAS,GAqCtD;kBArCoB,UAAU","file":"extensions/ootbFields/components/Customizer/OotbFields.js","sourcesContent":["import { Log } from '@microsoft/sp-core-library';\r\nimport { override } from '@microsoft/decorators';\r\nimport * as React from 'react';\r\n\r\nimport styles from './OotbFields.module.scss';\r\nimport { ListItemAccessor } from '@microsoft/sp-listview-extensibility';\r\nimport { FieldRendererHelper } from '../../../../common/utilities/FieldRendererHelper';\r\nimport { IProps } from '../../../../common/Interfaces';\r\nimport { IFieldRendererProps } from '../../../../controls/fields/fieldCommon/IFieldRendererProps';\r\n\r\nexport interface IOotbFieldsProps extends IProps, IFieldRendererProps {\r\n  text: string;\r\n  value: any;\r\n  listItem: ListItemAccessor;\r\n  fieldName: string;\r\n}\r\n\r\nexport interface IOotbFieldsState {\r\n  fieldRenderer?: JSX.Element;\r\n}\r\n\r\nconst LOG_SOURCE: string = 'OotbFields';\r\n\r\n/**\r\n * Field Customizer control to test fields' controls\r\n */\r\nexport default class OotbFields extends React.Component<IOotbFieldsProps, IOotbFieldsState> {\r\n  public constructor(props: IOotbFieldsProps, state: IOotbFieldsState) {\r\n    super(props, state);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  @override\r\n  public componentWillMount() {\r\n    FieldRendererHelper.getFieldRenderer(this.props.value, {\r\n      className: this.props.className,\r\n      cssProps: this.props.cssProps\r\n    }, this.props.listItem, this.props.context).then(fieldRenderer => {\r\n      this.setState({\r\n        fieldRenderer: fieldRenderer\r\n      });\r\n    });\r\n  }\r\n\r\n  @override\r\n  public componentDidMount(): void {\r\n    Log.info(LOG_SOURCE, 'React Element: OotbFields mounted');\r\n  }\r\n\r\n  @override\r\n  public componentWillUnmount(): void {\r\n    Log.info(LOG_SOURCE, 'React Element: OotbFields unmounted');\r\n  }\r\n\r\n  @override\r\n  public render(): React.ReactElement<{}> {\r\n    return (\r\n      <div className={styles.cell}>\r\n        {this.state.fieldRenderer}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}